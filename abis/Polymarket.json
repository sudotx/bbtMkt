{
  "contractName": "Polymarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_betToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "market",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "creatorImageHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalYesAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalNoAmount",
          "type": "uint256"
        }
      ],
      "name": "MarketCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "addNoBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "addYesBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_market",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_creatorImageHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_resolverUrl",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "createMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "eventOutcome",
          "type": "bool"
        }
      ],
      "name": "distributeWinningAmount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketId",
          "type": "uint256"
        }
      ],
      "name": "getGraphData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct BetMarket.AmountAdded[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct BetMarket.AmountAdded[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "market",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "creatorImageHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalYesAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalNoAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "eventCompleted",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "resolverUrl",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMarkets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winningAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "winningAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_polyToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"creatorImageHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalYesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalNoAmount\",\"type\":\"uint256\"}],\"name\":\"QuestionCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"addNoBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"addYesBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_creatorImageHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_resolverUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"name\":\"createQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"eventOutcome\",\"type\":\"bool\"}],\"name\":\"distributeWinningAmount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"getGraphData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Polymarket.AmountAdded[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Polymarket.AmountAdded[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"creatorImageHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalYesAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNoAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"eventCompleted\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolverUrl\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalQuestions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winningAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"winningAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Polymarket.sol\":\"Polymarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/Polymarket.sol\":{\"keccak256\":\"0xd1566b0718c3057338d35456f900f3fe95693d6125985c03bbcc9cb1ddebf41e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d791843466704d470b6951d3744c6ba541586ff3d4af6c3b727a9a8996aa60\",\"dweb:/ipfs/QmXuqddYac8H8qhbbTBdtazLS9DT4UCpZ858w6YFsSX2oq\"]}},\"version\":1}",
  "bytecode": {
    "functionDebugData": {
      "@_742": {
        "entryPoint": null,
        "id": 742,
        "parameterSlots": 1,
        "returnSlots": 0
      },
      "abi_decode_t_address_fromMemory": {
        "entryPoint": 206,
        "id": null,
        "parameterSlots": 2,
        "returnSlots": 1
      },
      "abi_decode_tuple_t_address_fromMemory": {
        "entryPoint": 229,
        "id": null,
        "parameterSlots": 2,
        "returnSlots": 1
      },
      "allocate_unbounded": {
        "entryPoint": null,
        "id": null,
        "parameterSlots": 0,
        "returnSlots": 1
      },
      "cleanup_t_address": {
        "entryPoint": 279,
        "id": null,
        "parameterSlots": 1,
        "returnSlots": 1
      },
      "cleanup_t_uint160": {
        "entryPoint": 299,
        "id": null,
        "parameterSlots": 1,
        "returnSlots": 1
      },
      "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
        "entryPoint": null,
        "id": null,
        "parameterSlots": 0,
        "returnSlots": 0
      },
      "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
        "entryPoint": 331,
        "id": null,
        "parameterSlots": 0,
        "returnSlots": 0
      },
      "validator_revert_t_address": {
        "entryPoint": 336,
        "id": null,
        "parameterSlots": 1,
        "returnSlots": 0
      }
    },
    "generatedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:1199:5",
          "statements": [
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "70:80:5",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "80:22:5",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "95:6:5"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "89:5:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "89:13:5"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "80:5:5"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "138:5:5"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_address",
                        "nodeType": "YulIdentifier",
                        "src": "111:26:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "111:33:5"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "111:33:5"
                  }
                ]
              },
              "name": "abi_decode_t_address_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "48:6:5",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "56:3:5",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "64:5:5",
                  "type": ""
                }
              ],
              "src": "7:143:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "233:274:5",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "279:83:5",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "281:77:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "281:79:5"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "281:79:5"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "254:7:5"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "263:9:5"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "250:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "250:23:5"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "275:2:5",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "246:3:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "246:32:5"
                    },
                    "nodeType": "YulIf",
                    "src": "243:119:5"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "372:128:5",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "387:15:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "401:1:5",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "391:6:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "416:74:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "462:9:5"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "473:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "458:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "458:22:5"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "482:7:5"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_address_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "426:31:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "426:64:5"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "416:6:5"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_address_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "203:9:5",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "214:7:5",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "226:6:5",
                  "type": ""
                }
              ],
              "src": "156:351:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "553:35:5",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "563:19:5",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "579:2:5",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "573:5:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "573:9:5"
                    },
                    "variableNames": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "563:6:5"
                      }
                    ]
                  }
                ]
              },
              "name": "allocate_unbounded",
              "nodeType": "YulFunctionDefinition",
              "returnVariables": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "546:6:5",
                  "type": ""
                }
              ],
              "src": "513:75:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "639:51:5",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "649:35:5",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "678:5:5"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulIdentifier",
                        "src": "660:17:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "660:24:5"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "649:7:5"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "621:5:5",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "631:7:5",
                  "type": ""
                }
              ],
              "src": "594:96:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "741:81:5",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "751:65:5",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "766:5:5"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "773:42:5",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "762:3:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "762:54:5"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "751:7:5"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_uint160",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "723:5:5",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "733:7:5",
                  "type": ""
                }
              ],
              "src": "696:126:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "917:28:5",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "934:1:5",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "937:1:5",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "927:6:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "927:12:5"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "927:12:5"
                  }
                ]
              },
              "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
              "nodeType": "YulFunctionDefinition",
              "src": "828:117:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1040:28:5",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1057:1:5",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1060:1:5",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "1050:6:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1050:12:5"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1050:12:5"
                  }
                ]
              },
              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
              "nodeType": "YulFunctionDefinition",
              "src": "951:117:5"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1117:79:5",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1174:16:5",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1183:1:5",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1186:1:5",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "1176:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1176:12:5"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1176:12:5"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1140:5:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1165:5:5"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1147:17:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1147:24:5"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1137:2:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1137:35:5"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "1130:6:5"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1130:43:5"
                    },
                    "nodeType": "YulIf",
                    "src": "1127:63:5"
                  }
                ]
              },
              "name": "validator_revert_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "1110:5:5",
                  "type": ""
                }
              ],
              "src": "1074:122:5"
            }
          ]
        },
        "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
        "id": 5,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "linkReferences": {},
    "object": "",
    "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0xA PUSH1 0x3 SSTORE PUSH1 0x64 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25AD CODESIZE SUB DUP1 PUSH3 0x25AD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x46 SWAP2 SWAP1 PUSH3 0xE5 JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x16A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xDF DUP2 PUSH3 0x150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xFE JUMPI PUSH3 0xFD PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x10E DUP5 DUP3 DUP6 ADD PUSH3 0xCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x124 DUP3 PUSH3 0x12B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15B DUP2 PUSH3 0x117 JUMP JUMPDEST DUP2 EQ PUSH3 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2433 DUP1 PUSH3 0x17A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xB1283E77 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xB78D6C1D EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xBF01FE00 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xDA6B4DB8 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xEB3F75E2 EQ PUSH2 0x2C4 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x14DD5762 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x3F4A5D0A EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x724BA40B EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x78691F16 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x8162486B EQ PUSH2 0x190 JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0x68E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x116F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1420 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x6 ADD DUP2 PUSH1 0x7 ADD DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3C7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x32B JUMP JUMPDEST POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x48A JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3EE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x559 SWAP1 PUSH2 0x2192 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x57D SWAP3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x5E2 SWAP3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x9 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0xA ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0xC ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x619 SWAP3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST POP DUP4 DUP2 PUSH1 0xD ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xE51B4CE9E60C0C010FCDEF22C23537F954E056004AED674362555A9D11D03738 PUSH1 0x2 SLOAD DUP9 DUP5 CALLER DUP11 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x67D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x1CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH1 0x9 ADD SLOAD DUP5 PUSH1 0x6 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x76B JUMPI PUSH2 0x76A PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0xA ADD SLOAD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B7 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 PUSH1 0x6 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x7EF JUMPI PUSH2 0x7EE PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP4 PUSH1 0x6 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x889 JUMPI PUSH2 0x888 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0x927 SWAP1 PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x73C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA93 JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x956 JUMPI PUSH2 0x955 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0xA8B SWAP1 PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x933 JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x7 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP4 PUSH1 0xA ADD SLOAD DUP5 PUSH1 0x7 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAD9 JUMPI PUSH2 0xAD8 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x9 ADD SLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x1FD4 JUMP JUMPDEST PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x7 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB26 JUMPI PUSH2 0xB25 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 PUSH1 0x7 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB5D JUMPI PUSH2 0xB5C PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBD8 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP4 PUSH1 0x7 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xBF7 JUMPI PUSH2 0xBF6 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0xC95 SWAP1 PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xE01 JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC4 JUMPI PUSH2 0xCC3 PUSH2 0x2268 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA0 SWAP1 PUSH2 0x1D16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP DUP1 DUP1 PUSH2 0xDF9 SWAP1 PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCA1 JUMP JUMPDEST POP PUSH1 0x7 PUSH1 0x0 PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xB ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xEAC SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED8 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF25 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEFA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF25 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF08 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0xF6C SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF98 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFE5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFBA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFE5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 DUP1 PUSH1 0x9 ADD SLOAD SWAP1 DUP1 PUSH1 0xA ADD SLOAD SWAP1 DUP1 PUSH1 0xB ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0xC ADD DUP1 SLOAD PUSH2 0x101F SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x104B SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1098 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x106D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1098 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x107B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0xD ADD DUP1 SLOAD PUSH2 0x10AD SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10D9 SWAP1 PUSH2 0x212F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1126 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1126 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1109 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP13 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AA SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130B SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP3 DUP3 PUSH1 0xA ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1355 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1370 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1464 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x145B SWAP1 PUSH2 0x1CF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A0 SWAP1 PUSH2 0x1CD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1502 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP3 DUP3 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1606 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1621 SWAP2 SWAP1 PUSH2 0x1F7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x16C5 SWAP1 PUSH2 0x212F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16E7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x172E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1700 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x172E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x172E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x172D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1712 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x175D SWAP2 SWAP1 PUSH2 0x1760 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1779 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1761 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1790 PUSH2 0x178B DUP5 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x1ED3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17AC JUMPI PUSH2 0x17AB PUSH2 0x22CB JUMP JUMPDEST JUMPDEST PUSH2 0x17B7 DUP5 DUP3 DUP6 PUSH2 0x20ED JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17CE DUP2 PUSH2 0x23B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E3 DUP2 PUSH2 0x23CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x17F8 DUP2 PUSH2 0x23CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1813 JUMPI PUSH2 0x1812 PUSH2 0x22C6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1823 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x177D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183B DUP2 PUSH2 0x23E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP5 DUP3 DUP6 ADD PUSH2 0x17BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1892 DUP5 DUP3 DUP6 ADD PUSH2 0x17E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18B7 JUMPI PUSH2 0x18B6 PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18D5 JUMPI PUSH2 0x18D4 PUSH2 0x22D0 JUMP JUMPDEST JUMPDEST PUSH2 0x18E1 DUP9 DUP3 DUP10 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1902 JUMPI PUSH2 0x1901 PUSH2 0x22D0 JUMP JUMPDEST JUMPDEST PUSH2 0x190E DUP9 DUP3 DUP10 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192F JUMPI PUSH2 0x192E PUSH2 0x22D0 JUMP JUMPDEST JUMPDEST PUSH2 0x193B DUP9 DUP3 DUP10 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195C JUMPI PUSH2 0x195B PUSH2 0x22D0 JUMP JUMPDEST JUMPDEST PUSH2 0x1968 DUP9 DUP3 DUP10 ADD PUSH2 0x17FE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1979 DUP9 DUP3 DUP10 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199C JUMPI PUSH2 0x199B PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19AA DUP5 DUP3 DUP6 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D8 DUP6 DUP3 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19E9 DUP6 DUP3 DUP7 ADD PUSH2 0x17D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x22D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A29 DUP6 DUP3 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A3F DUP4 DUP4 PUSH2 0x1BCD JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A54 DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A63 DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 DUP3 PUSH2 0x1F39 JUMP JUMPDEST PUSH2 0x1A7E DUP2 DUP6 PUSH2 0x1F5C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A89 DUP4 PUSH2 0x1F29 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ABA JUMPI DUP2 MLOAD PUSH2 0x1AA1 DUP9 DUP3 PUSH2 0x1A33 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AAC DUP4 PUSH2 0x1F4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A8D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD0 DUP2 PUSH2 0x20A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1ADF DUP2 PUSH2 0x20DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF0 DUP3 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0x1AFA DUP2 DUP6 PUSH2 0x1F6D JUMP JUMPDEST SWAP4 POP PUSH2 0x1B0A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x1B13 DUP2 PUSH2 0x22DA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2B PUSH1 0xC DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B36 DUP3 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4E PUSH1 0x19 DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B59 DUP3 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x11 DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x233D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B94 PUSH1 0x14 DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9F DUP3 PUSH2 0x2366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB7 PUSH1 0x11 DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC2 DUP3 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1BE3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1A4B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BF6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1C0F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1C09 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1C0F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C18 DUP2 PUSH2 0x20D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1C27 DUP2 PUSH2 0x20D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C42 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x1C77 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C1E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C99 DUP2 DUP6 PUSH2 0x1A69 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CAD DUP2 DUP5 PUSH2 0x1A69 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CCF DUP2 PUSH2 0x1B1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CEF DUP2 PUSH2 0x1B41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0F DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2F DUP2 PUSH2 0x1B87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1BAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x1D87 PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x1C1E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D99 DUP2 DUP11 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DA8 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1DB5 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x1A5A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1DC7 DUP2 DUP8 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DD6 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x1DE3 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x1DF0 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x180 DUP3 ADD SWAP1 POP PUSH2 0x1E13 PUSH1 0x0 DUP4 ADD DUP16 PUSH2 0x1C1E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1E25 DUP2 DUP15 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E34 PUSH1 0x40 DUP4 ADD DUP14 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1E41 PUSH1 0x60 DUP4 ADD DUP13 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1E4E PUSH1 0x80 DUP4 ADD DUP12 PUSH2 0x1A5A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1E60 DUP2 DUP11 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E6F PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1E7C PUSH1 0xE0 DUP4 ADD DUP9 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1E8A PUSH2 0x100 DUP4 ADD DUP8 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1E98 PUSH2 0x120 DUP4 ADD DUP7 PUSH2 0x1AC7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x1EAB DUP2 DUP6 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x160 DUP4 ADD MSTORE PUSH2 0x1EC0 DUP2 DUP5 PUSH2 0x1AE5 JUMP JUMPDEST SWAP1 POP SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDD PUSH2 0x1EEE JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE9 DUP3 DUP3 PUSH2 0x2161 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST PUSH2 0x1F1C DUP3 PUSH2 0x22DA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F89 DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F94 DUP4 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1FC9 JUMPI PUSH2 0x1FC8 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDF DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP4 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x220A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2010 DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP4 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2054 JUMPI PUSH2 0x2053 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206A DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2075 DUP4 PUSH2 0x20D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x2087 PUSH2 0x21DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209E DUP3 PUSH2 0x20B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E6 DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2129 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2147 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x2239 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP3 PUSH2 0x22DA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2189 JUMPI PUSH2 0x2188 PUSH2 0x2297 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219D DUP3 PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x21D0 JUMPI PUSH2 0x21CF PUSH2 0x21DB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E617574686F72697A65640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F752063616E74207374616B652062656C6F77206D696E2000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F752063616E74207374616B65203020000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6661696C656420746F2064697374726962757465000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x63616E74206164642C2074696D65207570000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x23C1 DUP2 PUSH2 0x2093 JUMP JUMPDEST DUP2 EQ PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23D8 DUP2 PUSH2 0x20A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x23E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x23EF DUP2 PUSH2 0x20D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x23FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x5E XOR 0x5D KECCAK256 0xAC 0x25 0xDA 0xEA MULMOD PUSH27 0xAA68CE96735543E92DE32150B307EF8E6EED37573764736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
    "sourceMap": "121:6043:4:-:0;;;234:1;204:31;;274:2;263:13;;337:3;310:30;;365:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;415:10;407:5;;:18;;;;;;;;;;;;;;;;;;447:9;436:8;;:20;;;;;;;;;;;;;;;;;;365:99;121:6043;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;121:6043:4:-;;;;;;;"
  },
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063bea5b91411610059578063bea5b9141461027b578063bf01fe00146102a6578063da6b4db8146102c2578063eb3f75e2146102ff576100c2565b80638da5cb5b146101e8578063b6db75a014610213578063b78d6c1d1461023e576100c2565b806314dd5762146100c757806319a1cafe1461010557806325caa2621461012e57806331b1b978146101595780636faa22a5146101a1578063724ba40b146101cc575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e9919061175e565b61031b565b6040516100fc9291906118cc565b60405180910390f35b34801561011157600080fd5b5061012c60048036038101906101279190611a49565b6104cd565b005b34801561013a57600080fd5b506101436106c1565b6040516101509190611b43565b60405180910390f35b34801561016557600080fd5b50610180600480360381019061017b919061175e565b6106c9565b6040516101989c9b9a99989796959493929190611c10565b60405180910390f35b3480156101ad57600080fd5b506101b6610976565b6040516101c39190611ce6565b60405180910390f35b6101e660048036038101906101e19190611d2d565b61099c565b005b3480156101f457600080fd5b506101fd611175565b60405161020a9190611ce6565b60405180910390f35b34801561021f57600080fd5b50610228611199565b6040516102359190611d6d565b60405180910390f35b34801561024a57600080fd5b506102656004803603810190610260919061175e565b611201565b6040516102729190611ce6565b60405180910390f35b34801561028757600080fd5b50610290611240565b60405161029d9190611b43565b60405180910390f35b6102c060048036038101906102bb9190611d88565b611246565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190611df4565b61143f565b6040516102f69190611b43565b60405180910390f35b61031960048036038101906103149190611d88565b611457565b005b6060806000600360008581526020019081526020016000209050806006018160070181805480602002602001604051908101604052809291908181526020016000905b828210156103fa57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250508152602001906001019061035e565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156104bd57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152505081526020019060010190610421565b5050505090509250925050915091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290611e6d565b60405180910390fd5b6000429050600060036000600254815260200190815260200160002090506002600081548092919061058c90611ebc565b919050558160000181905550868160010190805190602001906105b0929190611650565b50818160020181905550338160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085816005019080519060200190610615929190611650565b506000816008018190555060008160090181905550600081600a01819055508481600c01908051906020019061064c929190611650565b508381600d019080519060200190610665929190611650565b508281600301819055507fd8960286cb5486e9a27d200d805d06e2eeda2fe2bd67967e36b466ecd440ac996002548884338a60008060006040516106b0989796959493929190611f4a565b60405180910390a150505050505050565b600047905090565b60036020528060005260406000206000915090508060000154908060010180546106f290612005565b80601f016020809104026020016040519081016040528092919081815260200182805461071e90612005565b801561076b5780601f106107405761010080835404028352916020019161076b565b820191906000526020600020905b81548152906001019060200180831161074e57829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050180546107b290612005565b80601f01602080910402602001604051908101604052809291908181526020018280546107de90612005565b801561082b5780601f106108005761010080835404028352916020019161082b565b820191906000526020600020905b81548152906001019060200180831161080e57829003601f168201915b50505050509080600801549080600901549080600a01549080600b0160009054906101000a900460ff169080600c01805461086590612005565b80601f016020809104026020016040519081016040528092919081815260200182805461089190612005565b80156108de5780601f106108b3576101008083540402835291602001916108de565b820191906000526020600020905b8154815290600101906020018083116108c157829003601f168201915b50505050509080600d0180546108f390612005565b80601f016020809104026020016040519081016040528092919081815260200182805461091f90612005565b801561096c5780601f106109415761010080835404028352916020019161096c565b820191906000526020600020905b81548152906001019060200180831161094f57829003601f168201915b505050505090508c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2190611e6d565b60405180910390fd5b60006003600084815260200190815260200160002090508115610dcf5760005b8160060180549050811015610c305760008260090154836006018381548110610a7657610a75612037565b5b90600052602060002090600302016001015484600a0154610a979190612066565b610aa191906120ef565b9050826006018281548110610ab957610ab8612037565b5b90600052602060002090600302016001015481610ad69190612120565b60046000856006018581548110610af057610aef612037565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b6b9190612120565b925050819055506005836006018381548110610b8a57610b89612037565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508080610c2890611ebc565b915050610a4a565b5060005b600580549050811015610dbb57600060058281548110610c5757610c56612037565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b8152600401610d209291906121cb565b6020604051808303816000875af1158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d639190612209565b50600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055508080610db390611ebc565b915050610c34565b5060056000610dca91906116d6565b611153565b60005b8160070180549050811015610fb857600082600a0154836007018381548110610dfe57610dfd612037565b5b9060005260206000209060030201600101548460090154610e1f9190612066565b610e2991906120ef565b9050826007018281548110610e4157610e40612037565b5b90600052602060002090600302016001015481610e5e9190612120565b60046000856007018581548110610e7857610e77612037565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ef39190612120565b925050819055506005836007018381548110610f1257610f11612037565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508080610fb090611ebc565b915050610dd2565b5060005b60058054905081101561114357600060058281548110610fdf57610fde612037565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b81526004016110a89291906121cb565b6020604051808303816000875af11580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190612209565b50600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905550808061113b90611ebc565b915050610fbc565b506005600061115291906116d6565b5b600181600b0160006101000a81548160ff021916908315150217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156111f957600190506111fe565b600090505b90565b6005818154811061121157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008214611289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128090612282565b60405180910390fd5b6000600360008481526020019081526020016000209050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016112ff939291906122a2565b6020604051808303816000875af115801561131e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113429190612209565b50600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525090508282600a01600082825461138c9190612120565b92505081905550828260080160008282546113a79190612120565b925050819055508160070181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155505050505050565b60046020528060005260406000206000915090505481565b6000821461149a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149190612282565b60405180910390fd5b6000600360008481526020019081526020016000209050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611510939291906122a2565b6020604051808303816000875af115801561152f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115539190612209565b50600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020014281525090508282600901600082825461159d9190612120565b92505081905550828260080160008282546115b89190612120565b925050819055508160060181908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155505050505050565b82805461165c90612005565b90600052602060002090601f01602090048101928261167e57600085556116c5565b82601f1061169757805160ff19168380011785556116c5565b828001600101855582156116c5579182015b828111156116c45782518255916020019190600101906116a9565b5b5090506116d291906116f7565b5090565b50805460008255906000526020600020908101906116f491906116f7565b50565b5b808211156117105760008160009055506001016116f8565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61173b81611728565b811461174657600080fd5b50565b60008135905061175881611732565b92915050565b6000602082840312156117745761177361171e565b5b600061178284828501611749565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e2826117b7565b9050919050565b6117f2816117d7565b82525050565b61180181611728565b82525050565b60608201600082015161181d60008501826117e9565b50602082015161183060208501826117f8565b50604082015161184360408501826117f8565b50505050565b60006118558383611807565b60608301905092915050565b6000602082019050919050565b60006118798261178b565b6118838185611796565b935061188e836117a7565b8060005b838110156118bf5781516118a68882611849565b97506118b183611861565b925050600181019050611892565b5085935050505092915050565b600060408201905081810360008301526118e6818561186e565b905081810360208301526118fa818461186e565b90509392505050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119568261190d565b810181811067ffffffffffffffff821117156119755761197461191e565b5b80604052505050565b6000611988611714565b9050611994828261194d565b919050565b600067ffffffffffffffff8211156119b4576119b361191e565b5b6119bd8261190d565b9050602081019050919050565b82818337600083830152505050565b60006119ec6119e784611999565b61197e565b905082815260208101848484011115611a0857611a07611908565b5b611a138482856119ca565b509392505050565b600082601f830112611a3057611a2f611903565b5b8135611a408482602086016119d9565b91505092915050565b600080600080600060a08688031215611a6557611a6461171e565b5b600086013567ffffffffffffffff811115611a8357611a82611723565b5b611a8f88828901611a1b565b955050602086013567ffffffffffffffff811115611ab057611aaf611723565b5b611abc88828901611a1b565b945050604086013567ffffffffffffffff811115611add57611adc611723565b5b611ae988828901611a1b565b935050606086013567ffffffffffffffff811115611b0a57611b09611723565b5b611b1688828901611a1b565b9250506080611b2788828901611749565b9150509295509295909350565b611b3d81611728565b82525050565b6000602082019050611b586000830184611b34565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b98578082015181840152602081019050611b7d565b83811115611ba7576000848401525b50505050565b6000611bb882611b5e565b611bc28185611b69565b9350611bd2818560208601611b7a565b611bdb8161190d565b840191505092915050565b611bef816117d7565b82525050565b60008115159050919050565b611c0a81611bf5565b82525050565b600061018082019050611c26600083018f611b34565b8181036020830152611c38818e611bad565b9050611c47604083018d611b34565b611c54606083018c611b34565b611c61608083018b611be6565b81810360a0830152611c73818a611bad565b9050611c8260c0830189611b34565b611c8f60e0830188611b34565b611c9d610100830187611b34565b611cab610120830186611c01565b818103610140830152611cbe8185611bad565b9050818103610160830152611cd38184611bad565b90509d9c50505050505050505050505050565b6000602082019050611cfb6000830184611be6565b92915050565b611d0a81611bf5565b8114611d1557600080fd5b50565b600081359050611d2781611d01565b92915050565b60008060408385031215611d4457611d4361171e565b5b6000611d5285828601611749565b9250506020611d6385828601611d18565b9150509250929050565b6000602082019050611d826000830184611c01565b92915050565b60008060408385031215611d9f57611d9e61171e565b5b6000611dad85828601611749565b9250506020611dbe85828601611749565b9150509250929050565b611dd1816117d7565b8114611ddc57600080fd5b50565b600081359050611dee81611dc8565b92915050565b600060208284031215611e0a57611e0961171e565b5b6000611e1884828501611ddf565b91505092915050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000611e57600c83611b69565b9150611e6282611e21565b602082019050919050565b60006020820190508181036000830152611e8681611e4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ec782611728565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611efa57611ef9611e8d565b5b600182019050919050565b6000819050919050565b6000819050919050565b6000611f34611f2f611f2a84611f05565b611f0f565b611728565b9050919050565b611f4481611f19565b82525050565b600061010082019050611f60600083018b611b34565b8181036020830152611f72818a611bad565b9050611f816040830189611b34565b611f8e6060830188611be6565b8181036080830152611fa08187611bad565b9050611faf60a0830186611f3b565b611fbc60c0830185611f3b565b611fc960e0830184611f3b565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061201d57607f821691505b6020821081141561203157612030611fd6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061207182611728565b915061207c83611728565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120b5576120b4611e8d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120fa82611728565b915061210583611728565b925082612115576121146120c0565b5b828204905092915050565b600061212b82611728565b915061213683611728565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561216b5761216a611e8d565b5b828201905092915050565b600061219161218c612187846117b7565b611f0f565b6117b7565b9050919050565b60006121a382612176565b9050919050565b60006121b582612198565b9050919050565b6121c5816121aa565b82525050565b60006040820190506121e060008301856121bc565b6121ed6020830184611b34565b9392505050565b60008151905061220381611d01565b92915050565b60006020828403121561221f5761221e61171e565b5b600061222d848285016121f4565b91505092915050565b7f5175657374696f6e2049442063616e6e6f74206265206e756c6c000000000000600082015250565b600061226c601a83611b69565b915061227782612236565b602082019050919050565b6000602082019050818103600083015261229b8161225f565b9050919050565b60006060820190506122b76000830186611be6565b6122c46020830185611be6565b6122d16040830184611b34565b94935050505056fea2646970667358221220dd754a847388db8834330e3502ea51614070baf6631ebd10f592b646fff5bf2d64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:7",
                "type": ""
              }
            ],
            "src": "466:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:7",
                "type": ""
              }
            ],
            "src": "568:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:7",
                "type": ""
              }
            ],
            "src": "696:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:7",
                "type": ""
              }
            ],
            "src": "845:351:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22376:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:7",
                "type": ""
              }
            ],
            "src": "417:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:7",
                "type": ""
              }
            ],
            "src": "545:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:7",
                "type": ""
              }
            ],
            "src": "690:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1127:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1138:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1154:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1148:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1138:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1120:6:7",
                "type": ""
              }
            ],
            "src": "1025:142:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1312:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1329:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1334:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1322:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1350:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1369:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1374:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1365:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1350:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1284:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1289:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1300:11:7",
                "type": ""
              }
            ],
            "src": "1173:212:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1491:60:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1501:11:7",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "1509:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1501:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1522:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1534:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1530:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1522:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1478:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1486:4:7",
                "type": ""
              }
            ],
            "src": "1391:160:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1602:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1612:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1627:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1634:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1623:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1612:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1584:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1594:7:7",
                "type": ""
              }
            ],
            "src": "1557:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1744:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1773:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1755:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1744:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1716:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1726:7:7",
                "type": ""
              }
            ],
            "src": "1689:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1846:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1863:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1886:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1868:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1856:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1856:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1856:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1834:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1841:3:7",
                "type": ""
              }
            ],
            "src": "1791:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1960:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1977:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2000:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1982:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1970:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1970:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1970:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1948:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1955:3:7",
                "type": ""
              }
            ],
            "src": "1905:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2201:572:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2211:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2227:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2232:4:7",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2223:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2223:14:7"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2215:4:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2247:164:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2282:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2312:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2319:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2308:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2308:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2302:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2302:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2286:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2372:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2390:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2395:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2386:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2386:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2338:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2338:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2338:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2421:166:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2458:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2488:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2495:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2484:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2484:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2478:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2462:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2548:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2566:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2571:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2562:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2562:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2514:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2514:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2514:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2597:169:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2637:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2667:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2674:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2663:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2663:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2657:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2657:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2641:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2727:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2745:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2750:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2741:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2741:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2693:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2693:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2693:63:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2188:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2195:3:7",
                "type": ""
              }
            ],
            "src": "2089:684:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2915:155:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3015:6:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3023:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2925:89:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2925:102:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2925:102:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3036:28:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3054:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3059:4:7",
                        "type": "",
                        "value": "0x60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3050:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3036:10:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2888:6:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2896:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2904:10:7",
                "type": ""
              }
            ],
            "src": "2779:291:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3179:38:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3189:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3201:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3206:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3197:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "3189:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3166:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "3174:4:7",
                "type": ""
              }
            ],
            "src": "3076:141:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3477:776:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3487:96:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3577:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3501:75:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:82:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3491:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3592:121:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3701:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3706:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3599:101:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3599:114:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3592:3:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3722:99:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3815:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3737:77:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3737:84:7"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3726:7:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3830:21:7",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3844:7:7"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3834:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3920:308:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3934:34:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3961:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3955:5:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3955:13:7"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3938:13:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3981:126:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4088:13:7"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4103:3:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3988:99:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3988:119:7"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3981:3:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4120:98:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4211:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4130:80:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4130:88:7"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4120:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3882:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3885:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3879:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3893:18:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3895:14:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3904:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3907:1:7",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3900:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3900:9:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3895:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3864:14:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3866:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3875:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3870:1:7",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3860:368:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4237:10:7",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4244:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4237:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3456:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3463:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3472:3:7",
                "type": ""
              }
            ],
            "src": "3297:956:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4597:520:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4607:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4619:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4630:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4615:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4615:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4607:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4654:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4665:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4650:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4650:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4673:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4679:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4669:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4669:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4643:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4643:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4643:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4699:172:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4857:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4866:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4707:149:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:164:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4699:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4892:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4903:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4888:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4888:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4912:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4918:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4908:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4881:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4881:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4938:172:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5096:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5105:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4946:149:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4946:164:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4938:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4561:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4573:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4581:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4592:4:7",
                "type": ""
              }
            ],
            "src": "4259:858:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5212:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5229:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5232:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5222:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5222:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5222:12:7"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "5123:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5335:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5352:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5355:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5345:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5345:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5345:12:7"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "5246:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5417:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5427:38:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5445:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5452:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5441:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5441:14:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5461:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5457:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5457:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5437:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5437:28:7"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "5427:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5400:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "5410:6:7",
                "type": ""
              }
            ],
            "src": "5369:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5505:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5522:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5525:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5515:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5515:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5515:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5619:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5622:4:7",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5643:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5636:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5636:15:7"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5477:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5706:238:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5716:58:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5738:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "5768:4:7"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5746:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5746:27:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5734:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5734:40:7"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5720:10:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5885:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5887:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5887:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5887:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5828:10:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5840:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5825:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5825:34:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5864:10:7"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5876:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5861:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5861:22:7"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5822:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:62:7"
                  },
                  "nodeType": "YulIf",
                  "src": "5819:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5923:2:7",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5927:10:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5916:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5916:22:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5916:22:7"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5692:6:7",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5700:4:7",
                "type": ""
              }
            ],
            "src": "5663:281:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5991:88:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6001:30:7",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "6011:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6011:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "6001:6:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6060:6:7"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6068:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "6040:19:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6040:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6040:33:7"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5975:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5984:6:7",
                "type": ""
              }
            ],
            "src": "5950:129:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6152:241:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6257:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6259:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6259:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6259:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6229:6:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6237:18:7",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6226:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6226:30:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6223:56:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6289:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6319:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "6297:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6297:29:7"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6289:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6363:23:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "6375:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6381:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6371:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6371:15:7"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "6363:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6136:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "6147:4:7",
                "type": ""
              }
            ],
            "src": "6085:308:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6450:103:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6473:3:7"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6478:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6483:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6460:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6460:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6460:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6531:3:7"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6536:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6527:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6527:16:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6545:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6520:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6520:27:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6520:27:7"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6432:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6437:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6442:6:7",
                "type": ""
              }
            ],
            "src": "6399:154:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6643:328:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6653:75:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6720:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6678:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6678:49:7"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6662:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6662:66:7"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "6653:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6744:5:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6751:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6737:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6737:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6737:21:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6767:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "6782:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6789:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6778:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:16:7"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "6771:3:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6832:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "6834:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6834:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6834:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "6813:3:7"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6818:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6809:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6809:16:7"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6827:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6806:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6806:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6803:112:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6948:3:7"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6953:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6958:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6924:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6924:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6924:41:7"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6616:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6621:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6629:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "6637:5:7",
                "type": ""
              }
            ],
            "src": "6559:412:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7053:278:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7102:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "7104:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7104:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7104:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7081:6:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7089:4:7",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7077:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7077:17:7"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "7096:3:7"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7073:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7073:27:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7066:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7066:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7063:122:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7194:34:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7221:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7208:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:20:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7198:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7237:88:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7298:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7306:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7294:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7294:17:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7313:6:7"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "7321:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "7246:47:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7246:79:7"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "7237:5:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7031:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7039:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "7047:5:7",
                "type": ""
              }
            ],
            "src": "6991:340:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7511:1457:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7558:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7560:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7560:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7560:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7532:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7541:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7528:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7528:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7553:3:7",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7524:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:33:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7521:120:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7651:287:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7666:45:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7697:9:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7708:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7693:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7693:17:7"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7680:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7680:31:7"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7670:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7758:83:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "7760:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7760:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7760:79:7"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7730:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7738:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7727:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7727:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "7724:117:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7855:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7900:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7911:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7896:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7896:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7920:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "7865:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7865:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7855:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7948:288:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7963:46:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7994:9:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8005:2:7",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7990:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7990:18:7"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "7977:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7977:32:7"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7967:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8056:83:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8058:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8058:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8058:79:7"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8028:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8036:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8025:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8025:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "8022:117:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8153:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8198:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8209:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8194:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8194:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8218:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8163:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8163:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "8153:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8246:288:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8261:46:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8292:9:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8303:2:7",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8288:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8288:18:7"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8275:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8275:32:7"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8265:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8354:83:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8356:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8356:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8356:79:7"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8326:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8334:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8323:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8323:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "8320:117:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8451:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8496:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8507:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8492:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8492:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8516:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8461:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8461:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "8451:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8544:288:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8559:46:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8590:9:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8601:2:7",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8586:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8586:18:7"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "8573:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8573:32:7"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8563:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "8652:83:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "8654:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8654:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "8654:79:7"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8624:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8632:18:7",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8621:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8621:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "8618:117:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8749:73:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8794:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8805:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8790:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8790:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8814:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8759:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8759:63:7"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "8749:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8842:119:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8857:17:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8871:3:7",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "8861:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8888:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8923:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8934:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8919:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8919:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8943:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8898:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8898:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "8888:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7449:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7460:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7472:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7480:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7488:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7496:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7504:6:7",
                "type": ""
              }
            ],
            "src": "7337:1631:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9039:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9056:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9079:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9061:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9061:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9049:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9049:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9049:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9027:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9034:3:7",
                "type": ""
              }
            ],
            "src": "8974:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9196:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9206:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9218:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9229:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9214:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9206:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9286:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9299:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9310:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9295:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9295:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9242:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9242:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9168:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9180:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9191:4:7",
                "type": ""
              }
            ],
            "src": "9098:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9385:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9396:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9412:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9406:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9406:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9396:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9368:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9378:6:7",
                "type": ""
              }
            ],
            "src": "9326:99:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9527:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9544:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9549:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9537:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9537:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9537:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9565:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9584:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9589:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9580:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9580:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9565:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9499:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9504:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9515:11:7",
                "type": ""
              }
            ],
            "src": "9431:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9655:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9665:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9674:1:7",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9669:1:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9734:63:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9759:3:7"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9764:1:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9755:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9755:11:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9778:3:7"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9783:1:7"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9774:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9774:11:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9768:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9768:18:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9748:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9748:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9748:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9695:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9698:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9692:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9692:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9706:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9708:15:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9717:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9720:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9713:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9713:10:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9708:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9688:3:7",
                    "statements": []
                  },
                  "src": "9684:113:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9831:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9881:3:7"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9886:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9877:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9877:16:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9895:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9870:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9870:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9870:27:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9812:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9815:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9809:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9806:101:7"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9637:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9642:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9647:6:7",
                "type": ""
              }
            ],
            "src": "9606:307:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10011:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10021:53:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10068:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "10035:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10035:39:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10025:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10083:78:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10149:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10154:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10090:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10090:71:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10083:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10196:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10203:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10192:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10192:16:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10210:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10215:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10170:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10170:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10170:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10231:46:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10242:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10269:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "10247:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10247:29:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10238:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10238:39:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10231:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9992:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9999:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10007:3:7",
                "type": ""
              }
            ],
            "src": "9919:364:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10354:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10371:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10394:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "10376:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10376:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10364:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10364:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10364:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10342:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10349:3:7",
                "type": ""
              }
            ],
            "src": "10289:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10455:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10465:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10490:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10483:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10483:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10476:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10476:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10465:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10437:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10447:7:7",
                "type": ""
              }
            ],
            "src": "10413:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10568:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10585:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10605:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "10590:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10590:21:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10578:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10578:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10578:34:7"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10556:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10563:3:7",
                "type": ""
              }
            ],
            "src": "10509:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11106:1315:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11116:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11128:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11139:3:7",
                        "type": "",
                        "value": "384"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11124:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11124:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11116:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11197:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11210:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11221:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11206:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11206:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11153:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11153:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11153:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11245:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11256:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11241:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11241:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11265:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11271:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11261:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11261:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11234:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11234:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11234:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11291:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11363:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11372:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11299:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11299:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11291:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11431:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11444:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11455:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11440:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11440:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11387:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11387:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11387:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11513:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11526:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11537:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11522:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11522:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11469:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11469:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11469:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "11595:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11608:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11619:3:7",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11604:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11604:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11551:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11551:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11551:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11645:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11656:3:7",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11641:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11641:19:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11666:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11672:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11662:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11662:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11634:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11634:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11634:49:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11692:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "11764:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11773:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11700:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11700:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11692:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "11832:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11845:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11856:3:7",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11841:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11841:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11788:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11788:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11788:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "11915:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11928:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11939:3:7",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11924:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11924:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11871:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11871:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11871:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "11998:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12011:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12022:3:7",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12007:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12007:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11954:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11954:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11954:73:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value9",
                        "nodeType": "YulIdentifier",
                        "src": "12075:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12088:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12099:3:7",
                            "type": "",
                            "value": "288"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12084:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12084:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12037:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12037:67:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12037:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12125:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12136:3:7",
                            "type": "",
                            "value": "320"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12121:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12121:19:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12146:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12152:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12142:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12142:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12114:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12114:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12114:49:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12172:87:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value10",
                        "nodeType": "YulIdentifier",
                        "src": "12244:7:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12254:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12180:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12180:79:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12172:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12280:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12291:3:7",
                            "type": "",
                            "value": "352"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12276:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12276:19:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12301:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12307:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12297:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12297:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12269:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12269:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12269:49:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12327:87:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value11",
                        "nodeType": "YulIdentifier",
                        "src": "12399:7:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12409:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12335:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12335:79:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12327:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10988:9:7",
                "type": ""
              },
              {
                "name": "value11",
                "nodeType": "YulTypedName",
                "src": "11000:7:7",
                "type": ""
              },
              {
                "name": "value10",
                "nodeType": "YulTypedName",
                "src": "11009:7:7",
                "type": ""
              },
              {
                "name": "value9",
                "nodeType": "YulTypedName",
                "src": "11018:6:7",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "11026:6:7",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "11034:6:7",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "11042:6:7",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11050:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11058:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11066:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11074:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11082:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11090:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11101:4:7",
                "type": ""
              }
            ],
            "src": "10624:1797:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12525:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12535:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12547:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12558:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12543:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12543:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12535:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12615:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12628:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12639:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12624:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12624:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12571:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12571:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12571:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12497:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12509:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12520:4:7",
                "type": ""
              }
            ],
            "src": "12427:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12695:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12749:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12758:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12761:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12751:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12751:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12751:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12718:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12740:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "12725:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12725:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12715:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12715:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12708:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12708:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "12705:60:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12688:5:7",
                "type": ""
              }
            ],
            "src": "12655:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12826:84:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12836:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12858:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "12845:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12845:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "12836:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12898:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "12874:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12874:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12874:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "12804:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12812:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12820:5:7",
                "type": ""
              }
            ],
            "src": "12777:133:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12996:388:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13042:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "13044:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13044:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13044:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13017:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13026:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13013:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13013:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13038:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13009:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13009:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13006:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13135:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13150:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13164:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13154:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13179:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13214:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13225:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13210:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13210:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13234:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13189:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13189:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13179:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13262:115:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13277:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13291:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13281:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13307:60:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13339:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13350:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13335:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13335:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13359:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "13317:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13317:50:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "13307:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12958:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12969:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12981:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12989:6:7",
                "type": ""
              }
            ],
            "src": "12916:468:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13482:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13492:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13504:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13515:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13500:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13500:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13492:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13566:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13579:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13590:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13575:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13575:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13528:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13528:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13528:65:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13454:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13466:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13477:4:7",
                "type": ""
              }
            ],
            "src": "13390:210:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13689:391:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13735:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "13737:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13737:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13737:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13710:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13719:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13706:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13706:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13731:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13702:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13702:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13699:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13828:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13843:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13857:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13847:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13872:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13907:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13918:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13903:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13903:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13927:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "13882:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13882:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13872:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13955:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13970:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13984:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13974:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14000:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14035:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14046:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14031:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14031:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14055:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "14010:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14010:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "14000:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13651:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13662:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13674:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13682:6:7",
                "type": ""
              }
            ],
            "src": "13606:474:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14129:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14186:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14195:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14198:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14188:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14188:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14188:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14152:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14177:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14159:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14159:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14149:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14149:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14142:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14142:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14139:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14122:5:7",
                "type": ""
              }
            ],
            "src": "14086:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14266:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14276:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14298:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "14285:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14285:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14276:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14341:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "14314:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14314:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14314:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "14244:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14252:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14260:5:7",
                "type": ""
              }
            ],
            "src": "14214:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14425:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14471:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "14473:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14473:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14473:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14446:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14455:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14442:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14442:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14467:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14438:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14438:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "14435:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "14564:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14579:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14593:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "14583:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14608:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14643:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14654:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14639:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14639:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14663:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "14618:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14618:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "14608:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14395:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14406:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14418:6:7",
                "type": ""
              }
            ],
            "src": "14359:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14800:56:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14822:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14830:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14818:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14818:14:7"
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14834:14:7",
                        "type": "",
                        "value": "Unauthorized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14811:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14811:38:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14811:38:7"
                }
              ]
            },
            "name": "store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14792:6:7",
                "type": ""
              }
            ],
            "src": "14694:162:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15008:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15018:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15084:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15089:2:7",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15025:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15025:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15018:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15190:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                      "nodeType": "YulIdentifier",
                      "src": "15101:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15101:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15101:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15203:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15214:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15219:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15210:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15210:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15203:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14996:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15004:3:7",
                "type": ""
              }
            ],
            "src": "14862:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15405:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15415:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15427:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15438:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15423:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15423:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15415:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15462:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15473:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15458:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15458:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15481:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15487:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15477:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15477:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15451:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15451:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15451:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15507:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15641:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15515:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15515:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15507:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15385:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15400:4:7",
                "type": ""
              }
            ],
            "src": "15234:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15687:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15704:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15707:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15697:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15697:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15697:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15801:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15804:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15794:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15794:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15794:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15825:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15828:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15818:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15818:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15818:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15659:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15888:190:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15898:33:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15925:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15907:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15907:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "15898:5:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16021:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16023:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16023:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16023:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15946:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15953:66:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15943:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15943:77:7"
                  },
                  "nodeType": "YulIf",
                  "src": "15940:103:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16052:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16063:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16070:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16059:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16059:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "16052:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15874:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15884:3:7",
                "type": ""
              }
            ],
            "src": "15845:233:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16137:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16147:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16158:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16147:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_0_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16119:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16129:7:7",
                "type": ""
              }
            ],
            "src": "16084:85:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16207:28:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16217:12:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16224:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "16217:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16193:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "16203:3:7",
                "type": ""
              }
            ],
            "src": "16175:60:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16309:90:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16319:74:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16385:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_0_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "16359:25:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16359:32:7"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "16350:8:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16350:42:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16332:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16332:61:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16319:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16289:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16299:9:7",
                "type": ""
              }
            ],
            "src": "16241:158:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16478:74:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16495:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16539:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16500:38:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16500:45:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16488:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16488:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16488:58:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16466:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16473:3:7",
                "type": ""
              }
            ],
            "src": "16405:147:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16916:869:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16926:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16938:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16949:3:7",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16934:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16934:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16926:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17007:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17020:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17031:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17016:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17016:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16963:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16963:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16963:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17055:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17066:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17051:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17051:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17075:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17081:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17071:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17071:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17044:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17044:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17044:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17101:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17173:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17182:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17109:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17109:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17101:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17241:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17254:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17265:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17250:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17250:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17197:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17197:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17197:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "17323:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17336:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17347:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17332:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17332:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17279:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17279:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17279:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17372:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17383:3:7",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17368:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17368:19:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17393:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17399:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17389:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17389:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17361:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17361:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17361:49:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17419:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "17491:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17500:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17427:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17427:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17419:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "17567:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17580:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17591:3:7",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17576:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17576:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17515:51:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17515:81:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17515:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "17658:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17671:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17682:3:7",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17667:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17667:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17606:51:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17606:81:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17606:81:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "17749:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17762:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17773:3:7",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17758:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17758:19:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17697:51:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17697:81:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17697:81:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16832:9:7",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "16844:6:7",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "16852:6:7",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "16860:6:7",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "16868:6:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "16876:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16884:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16892:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16900:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16911:4:7",
                "type": ""
              }
            ],
            "src": "16558:1227:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17819:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17836:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17839:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17829:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17829:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17829:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17933:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17936:4:7",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17926:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17926:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17926:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17957:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17960:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17950:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17950:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17950:15:7"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "17791:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18028:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18038:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "18052:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18058:1:7",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "18048:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18048:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "18038:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "18069:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "18099:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18105:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18095:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18095:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "18073:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18146:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "18160:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "18174:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18182:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "18170:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18170:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18160:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "18126:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18119:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18119:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "18116:81:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18249:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "18263:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18263:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18263:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "18213:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "18236:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18244:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "18233:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18233:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "18210:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18210:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "18207:84:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "18012:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "18021:6:7",
                "type": ""
              }
            ],
            "src": "17977:320:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18331:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18348:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18351:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18341:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18341:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18341:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18445:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18448:4:7",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18438:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18438:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18438:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18469:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18472:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18462:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18462:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18462:15:7"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "18303:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18537:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18547:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18570:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18552:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18552:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18547:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18581:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18604:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18586:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18586:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18581:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18779:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18781:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18781:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18781:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18691:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18684:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18684:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "18677:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18677:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18699:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18706:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18774:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "18702:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18702:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "18696:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18696:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18673:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18673:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "18670:131:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18811:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18826:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18829:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "18822:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18822:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "18811:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18520:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18523:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "18529:7:7",
                "type": ""
              }
            ],
            "src": "18489:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18871:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18888:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18891:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18881:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18881:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18881:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18985:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18988:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18978:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18978:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18978:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19009:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19012:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19002:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19002:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19002:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18843:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19071:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19081:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19104:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19086:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19086:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19081:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19115:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19138:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19120:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19120:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19115:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19162:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "19164:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19164:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19164:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19159:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19152:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19152:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "19149:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19194:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19203:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19206:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19199:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19199:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19194:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19060:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19063:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19069:1:7",
                "type": ""
              }
            ],
            "src": "19029:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19264:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19274:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19297:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19279:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19279:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19274:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19308:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19331:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19313:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19313:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19308:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19471:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19473:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19473:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19473:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19392:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19399:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "19467:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19395:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19395:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19389:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19389:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "19386:107:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19503:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19514:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19517:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19510:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19510:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "19503:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19251:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19254:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "19260:3:7",
                "type": ""
              }
            ],
            "src": "19220:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19591:82:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19601:66:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "19659:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "19641:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19641:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "19632:8:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19632:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19614:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19614:53:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "19601:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19571:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "19581:9:7",
                "type": ""
              }
            ],
            "src": "19531:142:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19739:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19749:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19793:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "19762:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19762:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "19749:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19719:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "19729:9:7",
                "type": ""
              }
            ],
            "src": "19679:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19879:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19889:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "19933:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "19902:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19902:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "19889:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19859:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "19869:9:7",
                "type": ""
              }
            ],
            "src": "19811:134:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20024:74:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20041:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "20085:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "20046:38:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20046:45:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20034:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20034:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20034:58:7"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20012:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20019:3:7",
                "type": ""
              }
            ],
            "src": "19951:147:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20238:214:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20248:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20260:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20271:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20256:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20256:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20248:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "20336:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20349:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20360:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20345:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20345:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20284:51:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20284:79:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20284:79:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20417:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20430:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20441:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20426:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20426:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20373:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20373:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20373:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20202:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20214:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20222:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20233:4:7",
                "type": ""
              }
            ],
            "src": "20104:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20518:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20528:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "20543:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20537:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20537:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "20528:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "20583:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "20559:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20559:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20559:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "20496:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20504:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "20512:5:7",
                "type": ""
              }
            ],
            "src": "20458:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20675:271:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20721:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "20723:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20723:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20723:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20696:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20705:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20692:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20692:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20717:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20688:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20688:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "20685:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "20814:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20829:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20843:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "20833:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "20858:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20901:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "20912:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20897:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20897:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20921:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "20868:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20868:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "20858:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20645:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20656:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20668:6:7",
                "type": ""
              }
            ],
            "src": "20601:345:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21058:70:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21080:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21088:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21076:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21076:14:7"
                      },
                      {
                        "hexValue": "5175657374696f6e2049442063616e6e6f74206265206e756c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21092:28:7",
                        "type": "",
                        "value": "Question ID cannot be null"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21069:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21069:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21069:52:7"
                }
              ]
            },
            "name": "store_literal_in_memory_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21050:6:7",
                "type": ""
              }
            ],
            "src": "20952:176:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21280:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21290:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21356:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21361:2:7",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21297:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21297:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21290:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21462:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                      "nodeType": "YulIdentifier",
                      "src": "21373:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21373:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21373:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21475:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21486:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21491:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21482:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21482:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21475:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21268:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21276:3:7",
                "type": ""
              }
            ],
            "src": "21134:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21677:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21687:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21699:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21710:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21695:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21695:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21687:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21734:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21745:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21730:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21730:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21753:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21759:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21749:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21749:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21723:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21723:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21723:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21779:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21913:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21787:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21787:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21779:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21657:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21672:4:7",
                "type": ""
              }
            ],
            "src": "21506:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22085:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22095:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22107:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22118:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22103:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22103:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22095:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "22175:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22188:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22199:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22184:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22184:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22131:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22131:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22131:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "22256:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22269:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22280:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22265:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22265:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22212:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22212:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22212:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "22338:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22351:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22362:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22347:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22347:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22294:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22294:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22294:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22041:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "22053:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "22061:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "22069:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22080:4:7",
                "type": ""
              }
            ],
            "src": "21931:442:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Polymarket.AmountAdded -> struct Polymarket.AmountAdded\n    function abi_encode_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Polymarket.AmountAdded[] -> struct Polymarket.AmountAdded[]\n    function abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_AmountAdded_$825_memory_ptr_to_t_struct$_AmountAdded_$825_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 384)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value9,  add(headStart, 288))\n\n        mstore(add(headStart, 320), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value10,  tail)\n\n        mstore(add(headStart, 352), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value11,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_rational_0_by_1_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_string_memory_ptr_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399(memPtr) {\n\n        mstore(add(memPtr, 0), \"Question ID cannot be null\")\n\n    }\n\n    function abi_encode_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "113:5598:6:-:0;;;228:1;196:33;;236:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;286:10;278:5;;:18;;;;;;;;;;;;;;;;;;318:10;306:9;;:22;;;;;;;;;;;;;;;;;;236:99;113:5598;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;113:5598:6:-;;;;;;;",
  "deployedSourceMap": "113:5598:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3447:258;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1283:1061;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5616:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;165:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3711:1767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;139:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5484:126;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2900:541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;931:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2350:544;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3447:258;3535:20;3557;3593:26;3622:9;:22;3632:11;3622:22;;;;;;;;;;;3593:51;;3662:8;:17;;3681:8;:16;;3654:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3447:258;;;:::o;1283:1061::-;1529:5;;;;;;;;;;1515:19;;:10;:19;;;1507:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1562:17;1582:15;1562:35;;1608:26;1637:9;:25;1647:14;;1637:25;;;;;;;;;;;1608:54;;1687:14;;:16;;;;;;;;;:::i;:::-;;;;;1673:8;:11;;:30;;;;1733:9;1713:8;:17;;:29;;;;;;;;;;;;:::i;:::-;;1773:9;1752:8;:18;;:30;;;;1813:10;1792:8;:18;;;:31;;;;;;;;;;;;;;;;;;1861:17;1833:8;:25;;:45;;;;;;;;;;;;:::i;:::-;;1911:1;1888:8;:20;;:24;;;;1948:1;1922:8;:23;;:27;;;;1984:1;1959:8;:22;;:26;;;;2018:12;1995:8;:20;;:35;;;;;;;;;;;;:::i;:::-;;2063:12;2040:8;:20;;:35;;;;;;;;;;;;:::i;:::-;;2109:13;2085:8;:21;;:37;;;;2138:199;2167:14;;2195:9;2218;2241:10;2265:17;2296:1;2311;2326;2138:199;;;;;;;;;;;;;:::i;:::-;;;;;;;;1497:847;;1283:1061;;;;;:::o;5616:93::-;5655:7;5681:21;5674:28;;5616:93;:::o;341:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;165:24::-;;;;;;;;;;;;;:::o;3711:1767::-;3851:5;;;;;;;;;;3837:19;;:10;:19;;;3829:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3884:26;3913:9;:22;3923:11;3913:22;;;;;;;;;;;3884:51;;3949:12;3945:1487;;;3982:9;3977:391;4001:8;:17;;:24;;;;3997:1;:28;3977:391;;;4050:14;4144:8;:23;;;4113:8;:17;;4131:1;4113:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;4068:8;:22;;;:72;;;;:::i;:::-;4067:100;;;;:::i;:::-;4050:117;;4259:8;:17;;4277:1;4259:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;4230:6;:56;;;;:::i;:::-;4185:13;:40;4199:8;:17;;4217:1;4199:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;;;;;;;;;;4185:40;;;;;;;;;;;;;;;;:102;;;;;;;:::i;:::-;;;;;;;;4305:16;4327:8;:17;;4345:1;4327:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;;;;;;;;;;4305:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:336;4027:3;;;;;:::i;:::-;;;;3977:391;;;;4387:9;4382:268;4406:16;:23;;;;4402:1;:27;4382:268;;;4454:24;4489:16;4506:1;4489:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4454:55;;4533:9;;;;;;;;;;;4527:25;;;4553:8;4563:13;:23;4577:8;4563:23;;;;;;;;;;;;;;;;4527:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4612:13;:23;4626:8;4612:23;;;;;;;;;;;;;;;4605:30;;;4436:214;4431:3;;;;;:::i;:::-;;;;4382:268;;;;4670:16;;4663:23;;;;:::i;:::-;3945:1487;;;4722:9;4717:386;4741:8;:16;;:23;;;;4737:1;:27;4717:386;;;4789:14;4883:8;:22;;;4853:8;:16;;4870:1;4853:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;4807:8;:23;;;:72;;;;:::i;:::-;4806:99;;;;:::i;:::-;4789:116;;4996:8;:16;;5013:1;4996:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:26;;;4967:6;:55;;;;:::i;:::-;4923:13;:39;4937:8;:16;;4954:1;4937:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;;;;;;;;;;4923:39;;;;;;;;;;;;;;;;:100;;;;;;;:::i;:::-;;;;;;;;5041:16;5063:8;:16;;5080:1;5063:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;;;;;;;;;;5041:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4771:332;4766:3;;;;;:::i;:::-;;;;4717:386;;;;5122:9;5117:268;5141:16;:23;;;;5137:1;:27;5117:268;;;5189:24;5224:16;5241:1;5224:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5189:55;;5268:9;;;;;;;;;;;5262:25;;;5288:8;5298:13;:23;5312:8;5298:23;;;;;;;;;;;;;;;;5262:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5347:13;:23;5361:8;5347:23;;;;;;;;;;;;;;;5340:30;;;5171:214;5166:3;;;;;:::i;:::-;;;;5117:268;;;;5405:16;;5398:23;;;;:::i;:::-;3945:1487;5467:4;5441:8;:23;;;:30;;;;;;;;;;;;;;;;;;3819:1659;3711:1767;;:::o;139:20::-;;;;;;;;;;;;:::o;5484:126::-;5524:4;5558:5;;;;;;;;;;;5544:19;;:10;:19;;;5540:63;;;5572:4;5565:11;;;;5540:63;5598:5;5591:12;;5484:126;;:::o;985:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:::-;;;;:::o;2900:541::-;3003:1;2988:11;:16;2980:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3045:26;3074:9;:22;3084:11;3074:22;;;;;;;;;;;3045:51;;3112:9;;;;;;;;;;;3106:29;;;3136:10;3156:4;3163:6;3106:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3180:30;3213:94;;;;;;;;3238:10;3213:94;;;;;;3262:6;3213:94;;;;3282:15;3213:94;;;3180:127;;3344:6;3318:8;:22;;;:32;;;;;;;:::i;:::-;;;;;;;;3384:6;3360:8;:20;;;:30;;;;;;;:::i;:::-;;;;;;;;3400:8;:16;;3422:11;3400:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:471;;2900:541;;:::o;931:48::-;;;;;;;;;;;;;;;;;:::o;2350:544::-;2454:1;2439:11;:16;2431:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2496:26;2525:9;:22;2535:11;2525:22;;;;;;;;;;;2496:51;;2563:9;;;;;;;;;;;2557:29;;;2587:10;2607:4;2614:6;2557:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2631:30;2664:94;;;;;;;;2689:10;2664:94;;;;;;2713:6;2664:94;;;;2733:15;2664:94;;;2631:127;;2796:6;2769:8;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;2836:6;2812:8;:20;;;:30;;;;;;;:::i;:::-;;;;;;;;2852:8;:17;;2875:11;2852:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:473;;2350:544;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:142::-;1120:6;1154:5;1148:12;1138:22;;1025:142;;;:::o;1173:212::-;1300:11;1334:6;1329:3;1322:19;1374:4;1369:3;1365:14;1350:29;;1173:212;;;;:::o;1391:160::-;1486:4;1509:3;1501:11;;1539:4;1534:3;1530:14;1522:22;;1391:160;;;:::o;1557:126::-;1594:7;1634:42;1627:5;1623:54;1612:65;;1557:126;;;:::o;1689:96::-;1726:7;1755:24;1773:5;1755:24;:::i;:::-;1744:35;;1689:96;;;:::o;1791:108::-;1868:24;1886:5;1868:24;:::i;:::-;1863:3;1856:37;1791:108;;:::o;1905:::-;1982:24;2000:5;1982:24;:::i;:::-;1977:3;1970:37;1905:108;;:::o;2089:684::-;2232:4;2227:3;2223:14;2319:4;2312:5;2308:16;2302:23;2338:63;2395:4;2390:3;2386:14;2372:12;2338:63;:::i;:::-;2247:164;2495:4;2488:5;2484:16;2478:23;2514:63;2571:4;2566:3;2562:14;2548:12;2514:63;:::i;:::-;2421:166;2674:4;2667:5;2663:16;2657:23;2693:63;2750:4;2745:3;2741:14;2727:12;2693:63;:::i;:::-;2597:169;2201:572;2089:684;;:::o;2779:291::-;2904:10;2925:102;3023:3;3015:6;2925:102;:::i;:::-;3059:4;3054:3;3050:14;3036:28;;2779:291;;;;:::o;3076:141::-;3174:4;3206;3201:3;3197:14;3189:22;;3076:141;;;:::o;3297:956::-;3472:3;3501:82;3577:5;3501:82;:::i;:::-;3599:114;3706:6;3701:3;3599:114;:::i;:::-;3592:121;;3737:84;3815:5;3737:84;:::i;:::-;3844:7;3875:1;3860:368;3885:6;3882:1;3879:13;3860:368;;;3961:6;3955:13;3988:119;4103:3;4088:13;3988:119;:::i;:::-;3981:126;;4130:88;4211:6;4130:88;:::i;:::-;4120:98;;3920:308;3907:1;3904;3900:9;3895:14;;3860:368;;;3864:14;4244:3;4237:10;;3477:776;;;3297:956;;;;:::o;4259:858::-;4592:4;4630:2;4619:9;4615:18;4607:26;;4679:9;4673:4;4669:20;4665:1;4654:9;4650:17;4643:47;4707:164;4866:4;4857:6;4707:164;:::i;:::-;4699:172;;4918:9;4912:4;4908:20;4903:2;4892:9;4888:18;4881:48;4946:164;5105:4;5096:6;4946:164;:::i;:::-;4938:172;;4259:858;;;;;:::o;5123:117::-;5232:1;5229;5222:12;5246:117;5355:1;5352;5345:12;5369:102;5410:6;5461:2;5457:7;5452:2;5445:5;5441:14;5437:28;5427:38;;5369:102;;;:::o;5477:180::-;5525:77;5522:1;5515:88;5622:4;5619:1;5612:15;5646:4;5643:1;5636:15;5663:281;5746:27;5768:4;5746:27;:::i;:::-;5738:6;5734:40;5876:6;5864:10;5861:22;5840:18;5828:10;5825:34;5822:62;5819:88;;;5887:18;;:::i;:::-;5819:88;5927:10;5923:2;5916:22;5706:238;5663:281;;:::o;5950:129::-;5984:6;6011:20;;:::i;:::-;6001:30;;6040:33;6068:4;6060:6;6040:33;:::i;:::-;5950:129;;;:::o;6085:308::-;6147:4;6237:18;6229:6;6226:30;6223:56;;;6259:18;;:::i;:::-;6223:56;6297:29;6319:6;6297:29;:::i;:::-;6289:37;;6381:4;6375;6371:15;6363:23;;6085:308;;;:::o;6399:154::-;6483:6;6478:3;6473;6460:30;6545:1;6536:6;6531:3;6527:16;6520:27;6399:154;;;:::o;6559:412::-;6637:5;6662:66;6678:49;6720:6;6678:49;:::i;:::-;6662:66;:::i;:::-;6653:75;;6751:6;6744:5;6737:21;6789:4;6782:5;6778:16;6827:3;6818:6;6813:3;6809:16;6806:25;6803:112;;;6834:79;;:::i;:::-;6803:112;6924:41;6958:6;6953:3;6948;6924:41;:::i;:::-;6643:328;6559:412;;;;;:::o;6991:340::-;7047:5;7096:3;7089:4;7081:6;7077:17;7073:27;7063:122;;7104:79;;:::i;:::-;7063:122;7221:6;7208:20;7246:79;7321:3;7313:6;7306:4;7298:6;7294:17;7246:79;:::i;:::-;7237:88;;7053:278;6991:340;;;;:::o;7337:1631::-;7472:6;7480;7488;7496;7504;7553:3;7541:9;7532:7;7528:23;7524:33;7521:120;;;7560:79;;:::i;:::-;7521:120;7708:1;7697:9;7693:17;7680:31;7738:18;7730:6;7727:30;7724:117;;;7760:79;;:::i;:::-;7724:117;7865:63;7920:7;7911:6;7900:9;7896:22;7865:63;:::i;:::-;7855:73;;7651:287;8005:2;7994:9;7990:18;7977:32;8036:18;8028:6;8025:30;8022:117;;;8058:79;;:::i;:::-;8022:117;8163:63;8218:7;8209:6;8198:9;8194:22;8163:63;:::i;:::-;8153:73;;7948:288;8303:2;8292:9;8288:18;8275:32;8334:18;8326:6;8323:30;8320:117;;;8356:79;;:::i;:::-;8320:117;8461:63;8516:7;8507:6;8496:9;8492:22;8461:63;:::i;:::-;8451:73;;8246:288;8601:2;8590:9;8586:18;8573:32;8632:18;8624:6;8621:30;8618:117;;;8654:79;;:::i;:::-;8618:117;8759:63;8814:7;8805:6;8794:9;8790:22;8759:63;:::i;:::-;8749:73;;8544:288;8871:3;8898:53;8943:7;8934:6;8923:9;8919:22;8898:53;:::i;:::-;8888:63;;8842:119;7337:1631;;;;;;;;:::o;8974:118::-;9061:24;9079:5;9061:24;:::i;:::-;9056:3;9049:37;8974:118;;:::o;9098:222::-;9191:4;9229:2;9218:9;9214:18;9206:26;;9242:71;9310:1;9299:9;9295:17;9286:6;9242:71;:::i;:::-;9098:222;;;;:::o;9326:99::-;9378:6;9412:5;9406:12;9396:22;;9326:99;;;:::o;9431:169::-;9515:11;9549:6;9544:3;9537:19;9589:4;9584:3;9580:14;9565:29;;9431:169;;;;:::o;9606:307::-;9674:1;9684:113;9698:6;9695:1;9692:13;9684:113;;;9783:1;9778:3;9774:11;9768:18;9764:1;9759:3;9755:11;9748:39;9720:2;9717:1;9713:10;9708:15;;9684:113;;;9815:6;9812:1;9809:13;9806:101;;;9895:1;9886:6;9881:3;9877:16;9870:27;9806:101;9655:258;9606:307;;;:::o;9919:364::-;10007:3;10035:39;10068:5;10035:39;:::i;:::-;10090:71;10154:6;10149:3;10090:71;:::i;:::-;10083:78;;10170:52;10215:6;10210:3;10203:4;10196:5;10192:16;10170:52;:::i;:::-;10247:29;10269:6;10247:29;:::i;:::-;10242:3;10238:39;10231:46;;10011:272;9919:364;;;;:::o;10289:118::-;10376:24;10394:5;10376:24;:::i;:::-;10371:3;10364:37;10289:118;;:::o;10413:90::-;10447:7;10490:5;10483:13;10476:21;10465:32;;10413:90;;;:::o;10509:109::-;10590:21;10605:5;10590:21;:::i;:::-;10585:3;10578:34;10509:109;;:::o;10624:1797::-;11101:4;11139:3;11128:9;11124:19;11116:27;;11153:71;11221:1;11210:9;11206:17;11197:6;11153:71;:::i;:::-;11271:9;11265:4;11261:20;11256:2;11245:9;11241:18;11234:48;11299:78;11372:4;11363:6;11299:78;:::i;:::-;11291:86;;11387:72;11455:2;11444:9;11440:18;11431:6;11387:72;:::i;:::-;11469;11537:2;11526:9;11522:18;11513:6;11469:72;:::i;:::-;11551:73;11619:3;11608:9;11604:19;11595:6;11551:73;:::i;:::-;11672:9;11666:4;11662:20;11656:3;11645:9;11641:19;11634:49;11700:78;11773:4;11764:6;11700:78;:::i;:::-;11692:86;;11788:73;11856:3;11845:9;11841:19;11832:6;11788:73;:::i;:::-;11871;11939:3;11928:9;11924:19;11915:6;11871:73;:::i;:::-;11954;12022:3;12011:9;12007:19;11998:6;11954:73;:::i;:::-;12037:67;12099:3;12088:9;12084:19;12075:6;12037:67;:::i;:::-;12152:9;12146:4;12142:20;12136:3;12125:9;12121:19;12114:49;12180:79;12254:4;12244:7;12180:79;:::i;:::-;12172:87;;12307:9;12301:4;12297:20;12291:3;12280:9;12276:19;12269:49;12335:79;12409:4;12399:7;12335:79;:::i;:::-;12327:87;;10624:1797;;;;;;;;;;;;;;;:::o;12427:222::-;12520:4;12558:2;12547:9;12543:18;12535:26;;12571:71;12639:1;12628:9;12624:17;12615:6;12571:71;:::i;:::-;12427:222;;;;:::o;12655:116::-;12725:21;12740:5;12725:21;:::i;:::-;12718:5;12715:32;12705:60;;12761:1;12758;12751:12;12705:60;12655:116;:::o;12777:133::-;12820:5;12858:6;12845:20;12836:29;;12874:30;12898:5;12874:30;:::i;:::-;12777:133;;;;:::o;12916:468::-;12981:6;12989;13038:2;13026:9;13017:7;13013:23;13009:32;13006:119;;;13044:79;;:::i;:::-;13006:119;13164:1;13189:53;13234:7;13225:6;13214:9;13210:22;13189:53;:::i;:::-;13179:63;;13135:117;13291:2;13317:50;13359:7;13350:6;13339:9;13335:22;13317:50;:::i;:::-;13307:60;;13262:115;12916:468;;;;;:::o;13390:210::-;13477:4;13515:2;13504:9;13500:18;13492:26;;13528:65;13590:1;13579:9;13575:17;13566:6;13528:65;:::i;:::-;13390:210;;;;:::o;13606:474::-;13674:6;13682;13731:2;13719:9;13710:7;13706:23;13702:32;13699:119;;;13737:79;;:::i;:::-;13699:119;13857:1;13882:53;13927:7;13918:6;13907:9;13903:22;13882:53;:::i;:::-;13872:63;;13828:117;13984:2;14010:53;14055:7;14046:6;14035:9;14031:22;14010:53;:::i;:::-;14000:63;;13955:118;13606:474;;;;;:::o;14086:122::-;14159:24;14177:5;14159:24;:::i;:::-;14152:5;14149:35;14139:63;;14198:1;14195;14188:12;14139:63;14086:122;:::o;14214:139::-;14260:5;14298:6;14285:20;14276:29;;14314:33;14341:5;14314:33;:::i;:::-;14214:139;;;;:::o;14359:329::-;14418:6;14467:2;14455:9;14446:7;14442:23;14438:32;14435:119;;;14473:79;;:::i;:::-;14435:119;14593:1;14618:53;14663:7;14654:6;14643:9;14639:22;14618:53;:::i;:::-;14608:63;;14564:117;14359:329;;;;:::o;14694:162::-;14834:14;14830:1;14822:6;14818:14;14811:38;14694:162;:::o;14862:366::-;15004:3;15025:67;15089:2;15084:3;15025:67;:::i;:::-;15018:74;;15101:93;15190:3;15101:93;:::i;:::-;15219:2;15214:3;15210:12;15203:19;;14862:366;;;:::o;15234:419::-;15400:4;15438:2;15427:9;15423:18;15415:26;;15487:9;15481:4;15477:20;15473:1;15462:9;15458:17;15451:47;15515:131;15641:4;15515:131;:::i;:::-;15507:139;;15234:419;;;:::o;15659:180::-;15707:77;15704:1;15697:88;15804:4;15801:1;15794:15;15828:4;15825:1;15818:15;15845:233;15884:3;15907:24;15925:5;15907:24;:::i;:::-;15898:33;;15953:66;15946:5;15943:77;15940:103;;;16023:18;;:::i;:::-;15940:103;16070:1;16063:5;16059:13;16052:20;;15845:233;;;:::o;16084:85::-;16129:7;16158:5;16147:16;;16084:85;;;:::o;16175:60::-;16203:3;16224:5;16217:12;;16175:60;;;:::o;16241:158::-;16299:9;16332:61;16350:42;16359:32;16385:5;16359:32;:::i;:::-;16350:42;:::i;:::-;16332:61;:::i;:::-;16319:74;;16241:158;;;:::o;16405:147::-;16500:45;16539:5;16500:45;:::i;:::-;16495:3;16488:58;16405:147;;:::o;16558:1227::-;16911:4;16949:3;16938:9;16934:19;16926:27;;16963:71;17031:1;17020:9;17016:17;17007:6;16963:71;:::i;:::-;17081:9;17075:4;17071:20;17066:2;17055:9;17051:18;17044:48;17109:78;17182:4;17173:6;17109:78;:::i;:::-;17101:86;;17197:72;17265:2;17254:9;17250:18;17241:6;17197:72;:::i;:::-;17279;17347:2;17336:9;17332:18;17323:6;17279:72;:::i;:::-;17399:9;17393:4;17389:20;17383:3;17372:9;17368:19;17361:49;17427:78;17500:4;17491:6;17427:78;:::i;:::-;17419:86;;17515:81;17591:3;17580:9;17576:19;17567:6;17515:81;:::i;:::-;17606;17682:3;17671:9;17667:19;17658:6;17606:81;:::i;:::-;17697;17773:3;17762:9;17758:19;17749:6;17697:81;:::i;:::-;16558:1227;;;;;;;;;;;:::o;17791:180::-;17839:77;17836:1;17829:88;17936:4;17933:1;17926:15;17960:4;17957:1;17950:15;17977:320;18021:6;18058:1;18052:4;18048:12;18038:22;;18105:1;18099:4;18095:12;18126:18;18116:81;;18182:4;18174:6;18170:17;18160:27;;18116:81;18244:2;18236:6;18233:14;18213:18;18210:38;18207:84;;;18263:18;;:::i;:::-;18207:84;18028:269;17977:320;;;:::o;18303:180::-;18351:77;18348:1;18341:88;18448:4;18445:1;18438:15;18472:4;18469:1;18462:15;18489:348;18529:7;18552:20;18570:1;18552:20;:::i;:::-;18547:25;;18586:20;18604:1;18586:20;:::i;:::-;18581:25;;18774:1;18706:66;18702:74;18699:1;18696:81;18691:1;18684:9;18677:17;18673:105;18670:131;;;18781:18;;:::i;:::-;18670:131;18829:1;18826;18822:9;18811:20;;18489:348;;;;:::o;18843:180::-;18891:77;18888:1;18881:88;18988:4;18985:1;18978:15;19012:4;19009:1;19002:15;19029:185;19069:1;19086:20;19104:1;19086:20;:::i;:::-;19081:25;;19120:20;19138:1;19120:20;:::i;:::-;19115:25;;19159:1;19149:35;;19164:18;;:::i;:::-;19149:35;19206:1;19203;19199:9;19194:14;;19029:185;;;;:::o;19220:305::-;19260:3;19279:20;19297:1;19279:20;:::i;:::-;19274:25;;19313:20;19331:1;19313:20;:::i;:::-;19308:25;;19467:1;19399:66;19395:74;19392:1;19389:81;19386:107;;;19473:18;;:::i;:::-;19386:107;19517:1;19514;19510:9;19503:16;;19220:305;;;;:::o;19531:142::-;19581:9;19614:53;19632:34;19641:24;19659:5;19641:24;:::i;:::-;19632:34;:::i;:::-;19614:53;:::i;:::-;19601:66;;19531:142;;;:::o;19679:126::-;19729:9;19762:37;19793:5;19762:37;:::i;:::-;19749:50;;19679:126;;;:::o;19811:134::-;19869:9;19902:37;19933:5;19902:37;:::i;:::-;19889:50;;19811:134;;;:::o;19951:147::-;20046:45;20085:5;20046:45;:::i;:::-;20041:3;20034:58;19951:147;;:::o;20104:348::-;20233:4;20271:2;20260:9;20256:18;20248:26;;20284:79;20360:1;20349:9;20345:17;20336:6;20284:79;:::i;:::-;20373:72;20441:2;20430:9;20426:18;20417:6;20373:72;:::i;:::-;20104:348;;;;;:::o;20458:137::-;20512:5;20543:6;20537:13;20528:22;;20559:30;20583:5;20559:30;:::i;:::-;20458:137;;;;:::o;20601:345::-;20668:6;20717:2;20705:9;20696:7;20692:23;20688:32;20685:119;;;20723:79;;:::i;:::-;20685:119;20843:1;20868:61;20921:7;20912:6;20901:9;20897:22;20868:61;:::i;:::-;20858:71;;20814:125;20601:345;;;;:::o;20952:176::-;21092:28;21088:1;21080:6;21076:14;21069:52;20952:176;:::o;21134:366::-;21276:3;21297:67;21361:2;21356:3;21297:67;:::i;:::-;21290:74;;21373:93;21462:3;21373:93;:::i;:::-;21491:2;21486:3;21482:12;21475:19;;21134:366;;;:::o;21506:419::-;21672:4;21710:2;21699:9;21695:18;21687:26;;21759:9;21753:4;21749:20;21745:1;21734:9;21730:17;21723:47;21787:131;21913:4;21787:131;:::i;:::-;21779:139;;21506:419;;;:::o;21931:442::-;22080:4;22118:2;22107:9;22103:18;22095:26;;22131:71;22199:1;22188:9;22184:17;22175:6;22131:71;:::i;:::-;22212:72;22280:2;22269:9;22265:18;22256:6;22212:72;:::i;:::-;22294;22362:2;22351:9;22347:18;22338:6;22294:72;:::i;:::-;21931:442;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Polymarket {\n    address public owner;\n    address public polyToken;\n\n    uint256 public totalQuestions = 0;\n\n    constructor(address _polyToken) {\n        owner = msg.sender;\n        polyToken = _polyToken;\n    }\n\n    mapping(uint256 => Questions) public questions;\n\n    struct Questions {\n        uint256 id;\n        string question;\n        uint256 timestamp;\n        uint256 endTimestamp;\n        address createdBy;\n        string creatorImageHash;\n        AmountAdded[] yesCount;\n        AmountAdded[] noCount;\n        uint256 totalAmount;\n        uint256 totalYesAmount;\n        uint256 totalNoAmount;\n        bool eventCompleted;\n        string description;\n        string resolverUrl;\n    }\n\n    struct AmountAdded {\n        address user;\n        uint256 amount;\n        uint256 timestamp;\n    }\n\n    mapping(address => uint256) public winningAmount;\n    address[] public winningAddresses;\n\n    event QuestionCreated(\n        uint256 id,\n        string question,\n        uint256 timestamp,\n        address createdBy,\n        string creatorImageHash,\n        uint256 totalAmount,\n        uint256 totalYesAmount,\n        uint256 totalNoAmount\n    );\n\n    function createQuestion(\n        string memory _question,\n        string memory _creatorImageHash,\n        string memory _description,\n        string memory _resolverUrl,\n        uint256 _endTimestamp\n    ) public {\n        require(msg.sender == owner, \"Unauthorized\");\n\n        uint256 timestamp = block.timestamp;\n\n        Questions storage question = questions[totalQuestions];\n\n        question.id = totalQuestions++;\n        question.question = _question;\n        question.timestamp = timestamp;\n        question.createdBy = msg.sender;\n        question.creatorImageHash = _creatorImageHash;\n        question.totalAmount = 0;\n        question.totalYesAmount = 0;\n        question.totalNoAmount = 0;\n        question.description = _description;\n        question.resolverUrl = _resolverUrl;\n        question.endTimestamp = _endTimestamp;\n\n        emit QuestionCreated(\n            totalQuestions,\n            _question,\n            timestamp,\n            msg.sender,\n            _creatorImageHash,\n            0,\n            0,\n            0\n        );\n    }\n\n    function addYesBet(uint256 _questionId, uint256 _value) public payable {\n        require(_questionId == 0, \"Question ID cannot be null\");\n        Questions storage question = questions[_questionId];\n        ERC20(polyToken).transferFrom(msg.sender, address(this), _value);\n        AmountAdded memory amountAdded = AmountAdded(\n            msg.sender,\n            _value,\n            block.timestamp\n        );\n\n        question.totalYesAmount += _value;\n        question.totalAmount += _value;\n        question.yesCount.push(amountAdded);\n    }\n\n    function addNoBet(uint256 _questionId, uint256 _value) public payable {\n        require(_questionId == 0, \"Question ID cannot be null\");\n        Questions storage question = questions[_questionId];\n        ERC20(polyToken).transferFrom(msg.sender, address(this), _value);\n        AmountAdded memory amountAdded = AmountAdded(\n            msg.sender,\n            _value,\n            block.timestamp\n        );\n\n        question.totalNoAmount += _value;\n        question.totalAmount += _value;\n        question.noCount.push(amountAdded);\n    }\n\n    function getGraphData(uint256 _questionId)\n        public\n        view\n        returns (AmountAdded[] memory, AmountAdded[] memory)\n    {\n        Questions storage question = questions[_questionId];\n        return (question.yesCount, question.noCount);\n    }\n\n    function distributeWinningAmount(uint256 _questionId, bool eventOutcome)\n        public\n        payable\n    {\n        require(msg.sender == owner, \"Unauthorized\");\n\n        Questions storage question = questions[_questionId];\n        if (eventOutcome) {\n            for (uint256 i = 0; i < question.yesCount.length; i++) {\n                uint256 amount = (question.totalNoAmount *\n                    question.yesCount[i].amount) / question.totalYesAmount;\n                winningAmount[question.yesCount[i].user] += (amount +\n                    question.yesCount[i].amount);\n                winningAddresses.push(question.yesCount[i].user);\n            }\n\n            for (uint256 i = 0; i < winningAddresses.length; i++) {\n                address payable _address = payable(winningAddresses[i]);\n                ERC20(polyToken).transfer(_address, winningAmount[_address]);\n                delete winningAmount[_address];\n            }\n            delete winningAddresses;\n        } else {\n            for (uint256 i = 0; i < question.noCount.length; i++) {\n                uint256 amount = (question.totalYesAmount *\n                    question.noCount[i].amount) / question.totalNoAmount;\n                winningAmount[question.noCount[i].user] += (amount +\n                    question.noCount[i].amount);\n                winningAddresses.push(question.noCount[i].user);\n            }\n\n            for (uint256 i = 0; i < winningAddresses.length; i++) {\n                address payable _address = payable(winningAddresses[i]);\n                ERC20(polyToken).transfer(_address, winningAmount[_address]);\n                delete winningAmount[_address];\n            }\n            delete winningAddresses;\n        }\n        question.eventCompleted = true;\n    }\n\n    function isAdmin() public view returns (bool) {\n        if (msg.sender == owner) return true;\n        else return false;\n    }\n\n    function getBal() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n\n// \"Will Modi win?\", \"abcd\", \"xyz\", \"https;//google.com\"\n",
  "sourcePath": "/Users/viralsangani/Desktop/Projects/Personal/Polymarket-clone/contracts/Polymarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/Polymarket.sol",
    "exportedSymbols": {
      "Context": [670],
      "ERC20": [545],
      "IERC20": [623],
      "IERC20Metadata": [648],
      "Polymarket": [1376]
    },
    "id": 1377,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 757,
        "literals": ["solidity", "^", "0.8", ".6"],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 546,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Polymarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1376,
        "linearizedBaseContracts": [1376],
        "name": "Polymarket",
        "nameLocation": "122:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 760,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "154:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "139:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 759,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "139:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6faa22a5",
            "id": 762,
            "mutability": "mutable",
            "name": "polyToken",
            "nameLocation": "180:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "165:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bea5b914",
            "id": 765,
            "mutability": "mutable",
            "name": "totalQuestions",
            "nameLocation": "211:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "196:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "228:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "268:67:6",
              "statements": [
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 770,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "278:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 771,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "286:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "286:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "278:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "278:18:6"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "polyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "306:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 776,
                      "name": "_polyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "318:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "306:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:6"
                }
              ]
            },
            "id": 780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_polyToken",
                  "nameLocation": "256:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "248:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "247:20:6"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:6"
            },
            "scope": 1376,
            "src": "236:99:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 785,
            "mutability": "mutable",
            "name": "questions",
            "nameLocation": "378:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "341:46:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
              "typeString": "mapping(uint256 => struct Polymarket.Questions)"
            },
            "typeName": {
              "id": 784,
              "keyType": {
                "id": 781,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "349:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "341:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                "typeString": "mapping(uint256 => struct Polymarket.Questions)"
              },
              "valueType": {
                "id": 783,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 782,
                  "name": "Questions",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 818,
                  "src": "360:9:6"
                },
                "referencedDeclaration": 818,
                "src": "360:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                  "typeString": "struct Polymarket.Questions"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Polymarket.Questions",
            "id": 818,
            "members": [
              {
                "constant": false,
                "id": 787,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "429:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "421:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "421:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 789,
                "mutability": "mutable",
                "name": "question",
                "nameLocation": "448:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "441:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 788,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 791,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "474:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "466:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 790,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 793,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "501:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "493:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 792,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "493:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 795,
                "mutability": "mutable",
                "name": "createdBy",
                "nameLocation": "531:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "523:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 794,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 797,
                "mutability": "mutable",
                "name": "creatorImageHash",
                "nameLocation": "557:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "550:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 796,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 801,
                "mutability": "mutable",
                "name": "yesCount",
                "nameLocation": "597:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "583:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                  "typeString": "struct Polymarket.AmountAdded[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 799,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 798,
                      "name": "AmountAdded",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 825,
                      "src": "583:11:6"
                    },
                    "referencedDeclaration": 825,
                    "src": "583:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded"
                    }
                  },
                  "id": 800,
                  "nodeType": "ArrayTypeName",
                  "src": "583:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 805,
                "mutability": "mutable",
                "name": "noCount",
                "nameLocation": "629:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "615:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                  "typeString": "struct Polymarket.AmountAdded[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 802,
                      "name": "AmountAdded",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 825,
                      "src": "615:11:6"
                    },
                    "referencedDeclaration": 825,
                    "src": "615:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded"
                    }
                  },
                  "id": 804,
                  "nodeType": "ArrayTypeName",
                  "src": "615:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 807,
                "mutability": "mutable",
                "name": "totalAmount",
                "nameLocation": "654:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "646:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 806,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 809,
                "mutability": "mutable",
                "name": "totalYesAmount",
                "nameLocation": "683:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "675:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 808,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 811,
                "mutability": "mutable",
                "name": "totalNoAmount",
                "nameLocation": "715:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "707:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 810,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 813,
                "mutability": "mutable",
                "name": "eventCompleted",
                "nameLocation": "743:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "738:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 812,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 815,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "774:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "767:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 814,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "767:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 817,
                "mutability": "mutable",
                "name": "resolverUrl",
                "nameLocation": "802:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "795:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 816,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Questions",
            "nameLocation": "401:9:6",
            "nodeType": "StructDefinition",
            "scope": 1376,
            "src": "394:426:6",
            "visibility": "public"
          },
          {
            "canonicalName": "Polymarket.AmountAdded",
            "id": 825,
            "members": [
              {
                "constant": false,
                "id": 820,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "863:4:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "855:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "855:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 822,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "885:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "877:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "877:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 824,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "909:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "901:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 823,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AmountAdded",
            "nameLocation": "833:11:6",
            "nodeType": "StructDefinition",
            "scope": 1376,
            "src": "826:99:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6b4db8",
            "id": 829,
            "mutability": "mutable",
            "name": "winningAmount",
            "nameLocation": "966:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "931:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 828,
              "keyType": {
                "id": 826,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "931:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 827,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "950:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b78d6c1d",
            "id": 832,
            "mutability": "mutable",
            "name": "winningAddresses",
            "nameLocation": "1002:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "985:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 830,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 831,
              "nodeType": "ArrayTypeName",
              "src": "985:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 850,
            "name": "QuestionCreated",
            "nameLocation": "1031:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1064:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1056:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "question",
                  "nameLocation": "1083:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1076:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1109:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1101:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "createdBy",
                  "nameLocation": "1136:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1128:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creatorImageHash",
                  "nameLocation": "1162:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1155:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount",
                  "nameLocation": "1196:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1188:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalYesAmount",
                  "nameLocation": "1225:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1217:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalNoAmount",
                  "nameLocation": "1257:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1249:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:230:6"
            },
            "src": "1025:252:6"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "1497:847:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 864,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1515:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1515:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 866,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "1529:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1515:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1536:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:44:6"
                },
                {
                  "assignments": [872],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1570:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "1562:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1562:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 875,
                  "initialValue": {
                    "expression": {
                      "id": 873,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "1582:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "1582:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:35:6"
                },
                {
                  "assignments": [878],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 878,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1626:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "1608:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 876,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "1608:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "1608:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 882,
                  "initialValue": {
                    "baseExpression": {
                      "id": 879,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "1637:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 881,
                    "indexExpression": {
                      "id": 880,
                      "name": "totalQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "1647:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1637:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1608:54:6"
                },
                {
                  "expression": {
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 883,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1673:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1673:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1687:16:6",
                      "subExpression": {
                        "id": 886,
                        "name": "totalQuestions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "1687:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1673:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:30:6"
                },
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 890,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1713:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "question",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 789,
                      "src": "1713:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 893,
                      "name": "_question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "1733:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1713:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:29:6"
                },
                {
                  "expression": {
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 896,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1752:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 791,
                      "src": "1752:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 899,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "1773:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1752:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:30:6"
                },
                {
                  "expression": {
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 902,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1792:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "createdBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 795,
                      "src": "1792:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 905,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1813:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1813:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1792:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:31:6"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 909,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1833:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorImageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 797,
                      "src": "1833:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 912,
                      "name": "_creatorImageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "1861:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1833:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:45:6"
                },
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 915,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1888:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "1888:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1911:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1888:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:24:6"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 921,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1922:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalYesAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "1922:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1948:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1922:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1922:27:6"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 927,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1959:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalNoAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "1959:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1984:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1959:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:26:6"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 933,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1995:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "1995:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 936,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "2018:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1995:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:35:6"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 939,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "2040:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "resolverUrl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 817,
                      "src": "2040:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 942,
                      "name": "_resolverUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "2063:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2040:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:35:6"
                },
                {
                  "expression": {
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 945,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "2085:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 793,
                      "src": "2085:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 948,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "2109:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2085:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:37:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "totalQuestions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "2167:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 953,
                        "name": "_question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "2195:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 954,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "2218:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 955,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2241:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2241:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 957,
                        "name": "_creatorImageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "2265:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2296:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 951,
                      "name": "QuestionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "2138:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,uint256,address,string memory,uint256,uint256,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:199:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "2133:204:6"
                }
              ]
            },
            "functionSelector": "19a1cafe",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createQuestion",
            "nameLocation": "1292:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "_question",
                  "nameLocation": "1330:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1316:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_creatorImageHash",
                  "nameLocation": "1363:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1349:31:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "1404:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1390:26:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "_resolverUrl",
                  "nameLocation": "1440:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1426:26:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "1470:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1462:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:183:6"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:6"
            },
            "scope": 1376,
            "src": "1283:1061:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "2421:473:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 972,
                          "name": "_questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "2439:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2439:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175657374696f6e2049442063616e6e6f74206265206e756c6c",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        },
                        "value": "Question ID cannot be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2431:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2431:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:55:6"
                },
                {
                  "assignments": [980],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "2514:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "2496:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 978,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "2496:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "2496:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "baseExpression": {
                      "id": 981,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "2525:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 983,
                    "indexExpression": {
                      "id": 982,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "2535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2525:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2496:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 989,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2587:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2587:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2607:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2599:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2599:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2599:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 995,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "2614:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 986,
                            "name": "polyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "2563:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 985,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "2557:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2557:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "2557:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:64:6"
                },
                {
                  "assignments": [1000],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "amountAdded",
                      "nameLocation": "2650:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "2631:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      },
                      "typeName": {
                        "id": 999,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 998,
                          "name": "AmountAdded",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 825,
                          "src": "2631:11:6"
                        },
                        "referencedDeclaration": 825,
                        "src": "2631:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                          "typeString": "struct Polymarket.AmountAdded"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1008,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2689:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2689:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "2713:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1005,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2733:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2733:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1001,
                      "name": "AmountAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "2664:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AmountAdded_$825_storage_ptr_$",
                        "typeString": "type(struct Polymarket.AmountAdded storage pointer)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2664:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                      "typeString": "struct Polymarket.AmountAdded memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2631:127:6"
                },
                {
                  "expression": {
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1009,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2769:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalYesAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "2769:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1012,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "2796:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2769:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "2769:33:6"
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1015,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2812:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "2812:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1018,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "2836:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1026,
                        "name": "amountAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "2875:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1021,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "2852:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "yesCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 801,
                        "src": "2852:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2852:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$_t_struct$_AmountAdded_$825_storage_$returns$__$bound_to$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Polymarket.AmountAdded storage ref[] storage pointer,struct Polymarket.AmountAdded storage ref)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:35:6"
                }
              ]
            },
            "functionSelector": "eb3f75e2",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addYesBet",
            "nameLocation": "2359:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "2377:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2369:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2398:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2390:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2368:37:6"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:0:6"
            },
            "scope": 1376,
            "src": "2350:544:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "2970:471:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1038,
                          "name": "_questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1032,
                          "src": "2988:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3003:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2988:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175657374696f6e2049442063616e6e6f74206265206e756c6c",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3006:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        },
                        "value": "Question ID cannot be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        }
                      ],
                      "id": 1037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2980:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:55:6"
                },
                {
                  "assignments": [1046],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1046,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3063:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "3045:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1045,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1044,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3045:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3045:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1050,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1047,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3074:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1049,
                    "indexExpression": {
                      "id": 1048,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "3084:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3074:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3045:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1055,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3136:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3136:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1059,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3156:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          ],
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3148:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1057,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3148:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3148:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1061,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "3163:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "polyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "3112:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1051,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "3106:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3106:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "3106:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "3106:64:6"
                },
                {
                  "assignments": [1066],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1066,
                      "mutability": "mutable",
                      "name": "amountAdded",
                      "nameLocation": "3199:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "3180:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      },
                      "typeName": {
                        "id": 1065,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1064,
                          "name": "AmountAdded",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 825,
                          "src": "3180:11:6"
                        },
                        "referencedDeclaration": 825,
                        "src": "3180:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                          "typeString": "struct Polymarket.AmountAdded"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1074,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3238:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3238:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1070,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "3262:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1071,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3282:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3282:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1067,
                      "name": "AmountAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "3213:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AmountAdded_$825_storage_ptr_$",
                        "typeString": "type(struct Polymarket.AmountAdded storage pointer)"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                      "typeString": "struct Polymarket.AmountAdded memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:127:6"
                },
                {
                  "expression": {
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1075,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3318:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalNoAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "3318:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1078,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "3344:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3318:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:32:6"
                },
                {
                  "expression": {
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1081,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3360:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "3360:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1084,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "3384:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3360:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1092,
                        "name": "amountAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "3422:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1087,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "3400:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "noCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 805,
                        "src": "3400:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3400:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$_t_struct$_AmountAdded_$825_storage_$returns$__$bound_to$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Polymarket.AmountAdded storage ref[] storage pointer,struct Polymarket.AmountAdded storage ref)"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:34:6"
                }
              ]
            },
            "functionSelector": "bf01fe00",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNoBet",
            "nameLocation": "2909:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "2926:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2918:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2947:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2939:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:37:6"
            },
            "returnParameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2970:0:6"
            },
            "scope": 1376,
            "src": "2900:541:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "3583:122:6",
              "statements": [
                {
                  "assignments": [1111],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1111,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3611:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1122,
                      "src": "3593:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1109,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3593:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3593:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1112,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3622:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1114,
                    "indexExpression": {
                      "id": 1113,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "3632:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3622:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3593:51:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1116,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "3662:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "yesCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 801,
                        "src": "3662:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 1118,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "3681:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "noCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 805,
                        "src": "3681:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      }
                    ],
                    "id": 1120,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3661:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_$",
                      "typeString": "tuple(struct Polymarket.AmountAdded storage ref[] storage ref,struct Polymarket.AmountAdded storage ref[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 1108,
                  "id": 1121,
                  "nodeType": "Return",
                  "src": "3654:44:6"
                }
              ]
            },
            "functionSelector": "14dd5762",
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGraphData",
            "nameLocation": "3456:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "3477:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3469:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:21:6"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3535:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1101,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1100,
                        "name": "AmountAdded",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 825,
                        "src": "3535:11:6"
                      },
                      "referencedDeclaration": 825,
                      "src": "3535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      }
                    },
                    "id": 1102,
                    "nodeType": "ArrayTypeName",
                    "src": "3535:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3557:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1105,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1104,
                        "name": "AmountAdded",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 825,
                        "src": "3557:11:6"
                      },
                      "referencedDeclaration": 825,
                      "src": "3557:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      }
                    },
                    "id": 1106,
                    "nodeType": "ArrayTypeName",
                    "src": "3557:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3534:44:6"
            },
            "scope": 1376,
            "src": "3447:258:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "3819:1659:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1131,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3837:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3837:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1133,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "3851:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3837:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3829:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:44:6"
                },
                {
                  "assignments": [1140],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3902:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "3884:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1139,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1138,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3884:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3884:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1141,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3913:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1143,
                    "indexExpression": {
                      "id": 1142,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "3923:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3913:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3884:51:6"
                },
                {
                  "condition": {
                    "id": 1145,
                    "name": "eventOutcome",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1127,
                    "src": "3949:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "4703:729:6",
                    "statements": [
                      {
                        "body": {
                          "id": 1297,
                          "nodeType": "Block",
                          "src": "4771:332:6",
                          "statements": [
                            {
                              "assignments": [1256],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1256,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "4797:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1297,
                                  "src": "4789:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1255,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4789:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1269,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1257,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4807:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1258,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "totalYesAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 809,
                                        "src": "4807:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1259,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4853:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1260,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "noCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 805,
                                            "src": "4853:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1262,
                                          "indexExpression": {
                                            "id": 1261,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1244,
                                            "src": "4870:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4853:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1263,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4853:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4807:72:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1265,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4806:74:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1266,
                                    "name": "question",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1140,
                                    "src": "4883:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                      "typeString": "struct Polymarket.Questions storage pointer"
                                    }
                                  },
                                  "id": 1267,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalNoAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 811,
                                  "src": "4883:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4806:99:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4789:116:6"
                            },
                            {
                              "expression": {
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1270,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4923:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1276,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1271,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4937:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1272,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "noCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 805,
                                        "src": "4937:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1274,
                                      "indexExpression": {
                                        "id": 1273,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "4954:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4937:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1275,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4937:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4923:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1277,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1256,
                                        "src": "4967:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1278,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4996:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1279,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "noCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 805,
                                            "src": "4996:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1281,
                                          "indexExpression": {
                                            "id": 1280,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1244,
                                            "src": "5013:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4996:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1282,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4996:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4967:55:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1284,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4966:57:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4923:100:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1286,
                              "nodeType": "ExpressionStatement",
                              "src": "4923:100:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1290,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "5063:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1291,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "noCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 805,
                                        "src": "5063:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1293,
                                      "indexExpression": {
                                        "id": 1292,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "5080:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5063:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1294,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "5063:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1287,
                                    "name": "winningAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "5041:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5041:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5041:47:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1296,
                              "nodeType": "ExpressionStatement",
                              "src": "5041:47:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1247,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "4737:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1248,
                                "name": "question",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "4741:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                  "typeString": "struct Polymarket.Questions storage pointer"
                                }
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "noCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 805,
                              "src": "4741:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4741:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4737:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1298,
                        "initializationExpression": {
                          "assignments": [1244],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1244,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4730:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1298,
                              "src": "4722:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1243,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4722:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1246,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4734:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4722:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4766:3:6",
                            "subExpression": {
                              "id": 1252,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "4766:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1254,
                          "nodeType": "ExpressionStatement",
                          "src": "4766:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "4717:386:6"
                      },
                      {
                        "body": {
                          "id": 1334,
                          "nodeType": "Block",
                          "src": "5171:214:6",
                          "statements": [
                            {
                              "assignments": [1311],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1311,
                                  "mutability": "mutable",
                                  "name": "_address",
                                  "nameLocation": "5205:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1334,
                                  "src": "5189:24:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1310,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5189:15:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1318,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1314,
                                      "name": "winningAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 832,
                                      "src": "5224:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1316,
                                    "indexExpression": {
                                      "id": 1315,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1300,
                                      "src": "5241:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5224:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5216:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1312,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5216:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5216:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5189:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1323,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1311,
                                    "src": "5288:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1324,
                                      "name": "winningAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "5298:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1326,
                                    "indexExpression": {
                                      "id": 1325,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1311,
                                      "src": "5312:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5298:23:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1320,
                                        "name": "polyToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 762,
                                        "src": "5268:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1319,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 545,
                                      "src": "5262:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5262:16:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$545",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 119,
                                  "src": "5262:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5262:60:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1328,
                              "nodeType": "ExpressionStatement",
                              "src": "5262:60:6"
                            },
                            {
                              "expression": {
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5340:30:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1329,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "5347:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1331,
                                  "indexExpression": {
                                    "id": 1330,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1311,
                                    "src": "5361:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5347:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1333,
                              "nodeType": "ExpressionStatement",
                              "src": "5340:30:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1303,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "5137:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1304,
                              "name": "winningAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "5141:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5141:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5137:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1335,
                        "initializationExpression": {
                          "assignments": [1300],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1300,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5130:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1335,
                              "src": "5122:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1299,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5122:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1302,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5134:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5122:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5166:3:6",
                            "subExpression": {
                              "id": 1307,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "5166:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1309,
                          "nodeType": "ExpressionStatement",
                          "src": "5166:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "5117:268:6"
                      },
                      {
                        "expression": {
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5398:23:6",
                          "subExpression": {
                            "id": 1336,
                            "name": "winningAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "5405:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "5398:23:6"
                      }
                    ]
                  },
                  "id": 1340,
                  "nodeType": "IfStatement",
                  "src": "3945:1487:6",
                  "trueBody": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "3963:734:6",
                    "statements": [
                      {
                        "body": {
                          "id": 1200,
                          "nodeType": "Block",
                          "src": "4032:336:6",
                          "statements": [
                            {
                              "assignments": [1159],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1159,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "4058:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1200,
                                  "src": "4050:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1158,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4050:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1172,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1167,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1160,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4068:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1161,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "totalNoAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 811,
                                        "src": "4068:22:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1162,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4113:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1163,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "yesCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 801,
                                            "src": "4113:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1165,
                                          "indexExpression": {
                                            "id": 1164,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1147,
                                            "src": "4131:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4113:20:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1166,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4113:27:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4068:72:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1168,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4067:74:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1169,
                                    "name": "question",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1140,
                                    "src": "4144:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                      "typeString": "struct Polymarket.Questions storage pointer"
                                    }
                                  },
                                  "id": 1170,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalYesAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 809,
                                  "src": "4144:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4067:100:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4050:117:6"
                            },
                            {
                              "expression": {
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1173,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4185:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1179,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1174,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4199:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1175,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "yesCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 801,
                                        "src": "4199:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1177,
                                      "indexExpression": {
                                        "id": 1176,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1147,
                                        "src": "4217:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4199:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1178,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4199:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4185:40:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1180,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1159,
                                        "src": "4230:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1181,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4259:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1182,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "yesCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 801,
                                            "src": "4259:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1184,
                                          "indexExpression": {
                                            "id": 1183,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1147,
                                            "src": "4277:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4259:20:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1185,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4259:27:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4230:56:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1187,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4229:58:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4185:102:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1189,
                              "nodeType": "ExpressionStatement",
                              "src": "4185:102:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1193,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4327:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1194,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "yesCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 801,
                                        "src": "4327:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1196,
                                      "indexExpression": {
                                        "id": 1195,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1147,
                                        "src": "4345:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4327:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1197,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4327:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1190,
                                    "name": "winningAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "4305:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4305:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4305:48:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1199,
                              "nodeType": "ExpressionStatement",
                              "src": "4305:48:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1150,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "3997:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1151,
                                "name": "question",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "4001:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                  "typeString": "struct Polymarket.Questions storage pointer"
                                }
                              },
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "yesCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 801,
                              "src": "4001:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4001:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3997:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1201,
                        "initializationExpression": {
                          "assignments": [1147],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1147,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3990:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1201,
                              "src": "3982:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1146,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3982:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1149,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3994:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3982:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4027:3:6",
                            "subExpression": {
                              "id": 1155,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "4027:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1157,
                          "nodeType": "ExpressionStatement",
                          "src": "4027:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "3977:391:6"
                      },
                      {
                        "body": {
                          "id": 1237,
                          "nodeType": "Block",
                          "src": "4436:214:6",
                          "statements": [
                            {
                              "assignments": [1214],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1214,
                                  "mutability": "mutable",
                                  "name": "_address",
                                  "nameLocation": "4470:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1237,
                                  "src": "4454:24:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1213,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4454:15:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1221,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1217,
                                      "name": "winningAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 832,
                                      "src": "4489:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1219,
                                    "indexExpression": {
                                      "id": 1218,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "4506:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4489:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4481:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1215,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4481:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4481:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4454:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1226,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1214,
                                    "src": "4553:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1227,
                                      "name": "winningAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "4563:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1229,
                                    "indexExpression": {
                                      "id": 1228,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1214,
                                      "src": "4577:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4563:23:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1223,
                                        "name": "polyToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 762,
                                        "src": "4533:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1222,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 545,
                                      "src": "4527:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4527:16:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$545",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 119,
                                  "src": "4527:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4527:60:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "4527:60:6"
                            },
                            {
                              "expression": {
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "4605:30:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1232,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4612:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1234,
                                  "indexExpression": {
                                    "id": 1233,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1214,
                                    "src": "4626:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4612:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1236,
                              "nodeType": "ExpressionStatement",
                              "src": "4605:30:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1206,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "4402:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1207,
                              "name": "winningAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "4406:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4406:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4402:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1238,
                        "initializationExpression": {
                          "assignments": [1203],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1203,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4395:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1238,
                              "src": "4387:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1202,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4387:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1205,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4399:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4387:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4431:3:6",
                            "subExpression": {
                              "id": 1210,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "4431:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1212,
                          "nodeType": "ExpressionStatement",
                          "src": "4431:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "4382:268:6"
                      },
                      {
                        "expression": {
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4663:23:6",
                          "subExpression": {
                            "id": 1239,
                            "name": "winningAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "4670:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "4663:23:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1341,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "5441:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "eventCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "5441:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5467:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5441:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:30:6"
                }
              ]
            },
            "functionSelector": "724ba40b",
            "id": 1348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeWinningAmount",
            "nameLocation": "3720:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "3752:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "3744:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "eventOutcome",
                  "nameLocation": "3770:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "3765:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3765:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:40:6"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3819:0:6"
            },
            "scope": 1376,
            "src": "3711:1767:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "5530:80:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1353,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5544:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5544:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1355,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "5558:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5544:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5598:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 1352,
                    "id": 1360,
                    "nodeType": "Return",
                    "src": "5591:12:6"
                  },
                  "id": 1361,
                  "nodeType": "IfStatement",
                  "src": "5540:63:6",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5572:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 1352,
                    "id": 1358,
                    "nodeType": "Return",
                    "src": "5565:11:6"
                  }
                }
              ]
            },
            "functionSelector": "b6db75a0",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAdmin",
            "nameLocation": "5493:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5500:2:6"
            },
            "returnParameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "5524:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5523:6:6"
            },
            "scope": 1376,
            "src": "5484:126:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "5664:45:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1370,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5689:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Polymarket_$1376",
                            "typeString": "contract Polymarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Polymarket_$1376",
                            "typeString": "contract Polymarket"
                          }
                        ],
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5681:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5681:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5681:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5681:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1367,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "5674:28:6"
                }
              ]
            },
            "functionSelector": "25caa262",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBal",
            "nameLocation": "5625:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5631:2:6"
            },
            "returnParameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "5655:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5654:9:6"
            },
            "scope": 1376,
            "src": "5616:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1377,
        "src": "113:5598:6",
        "usedErrors": []
      }
    ],
    "src": "32:5738:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Polymarket.sol",
    "exportedSymbols": {
      "Context": [670],
      "ERC20": [545],
      "IERC20": [623],
      "IERC20Metadata": [648],
      "Polymarket": [1376]
    },
    "id": 1377,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 757,
        "literals": ["solidity", "^", "0.8", ".6"],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 758,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 546,
        "src": "56:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Polymarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1376,
        "linearizedBaseContracts": [1376],
        "name": "Polymarket",
        "nameLocation": "122:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 760,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "154:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "139:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 759,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "139:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6faa22a5",
            "id": 762,
            "mutability": "mutable",
            "name": "polyToken",
            "nameLocation": "180:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "165:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 761,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "165:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bea5b914",
            "id": 765,
            "mutability": "mutable",
            "name": "totalQuestions",
            "nameLocation": "211:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "196:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "228:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "268:67:6",
              "statements": [
                {
                  "expression": {
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 770,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "278:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 771,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "286:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "286:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "278:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "278:18:6"
                },
                {
                  "expression": {
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 775,
                      "name": "polyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "306:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 776,
                      "name": "_polyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "318:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "306:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:6"
                }
              ]
            },
            "id": 780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_polyToken",
                  "nameLocation": "256:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "248:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "247:20:6"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:0:6"
            },
            "scope": 1376,
            "src": "236:99:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 785,
            "mutability": "mutable",
            "name": "questions",
            "nameLocation": "378:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "341:46:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
              "typeString": "mapping(uint256 => struct Polymarket.Questions)"
            },
            "typeName": {
              "id": 784,
              "keyType": {
                "id": 781,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "349:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "341:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                "typeString": "mapping(uint256 => struct Polymarket.Questions)"
              },
              "valueType": {
                "id": 783,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 782,
                  "name": "Questions",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 818,
                  "src": "360:9:6"
                },
                "referencedDeclaration": 818,
                "src": "360:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                  "typeString": "struct Polymarket.Questions"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Polymarket.Questions",
            "id": 818,
            "members": [
              {
                "constant": false,
                "id": 787,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "429:2:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "421:10:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 786,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "421:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 789,
                "mutability": "mutable",
                "name": "question",
                "nameLocation": "448:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "441:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 788,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 791,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "474:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "466:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 790,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 793,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "501:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "493:20:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 792,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "493:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 795,
                "mutability": "mutable",
                "name": "createdBy",
                "nameLocation": "531:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "523:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 794,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "523:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 797,
                "mutability": "mutable",
                "name": "creatorImageHash",
                "nameLocation": "557:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "550:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 796,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 801,
                "mutability": "mutable",
                "name": "yesCount",
                "nameLocation": "597:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "583:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                  "typeString": "struct Polymarket.AmountAdded[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 799,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 798,
                      "name": "AmountAdded",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 825,
                      "src": "583:11:6"
                    },
                    "referencedDeclaration": 825,
                    "src": "583:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded"
                    }
                  },
                  "id": 800,
                  "nodeType": "ArrayTypeName",
                  "src": "583:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 805,
                "mutability": "mutable",
                "name": "noCount",
                "nameLocation": "629:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "615:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                  "typeString": "struct Polymarket.AmountAdded[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 802,
                      "name": "AmountAdded",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 825,
                      "src": "615:11:6"
                    },
                    "referencedDeclaration": 825,
                    "src": "615:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded"
                    }
                  },
                  "id": 804,
                  "nodeType": "ArrayTypeName",
                  "src": "615:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 807,
                "mutability": "mutable",
                "name": "totalAmount",
                "nameLocation": "654:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "646:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 806,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 809,
                "mutability": "mutable",
                "name": "totalYesAmount",
                "nameLocation": "683:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "675:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 808,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 811,
                "mutability": "mutable",
                "name": "totalNoAmount",
                "nameLocation": "715:13:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "707:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 810,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 813,
                "mutability": "mutable",
                "name": "eventCompleted",
                "nameLocation": "743:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "738:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 812,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "738:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 815,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "774:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "767:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 814,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "767:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 817,
                "mutability": "mutable",
                "name": "resolverUrl",
                "nameLocation": "802:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 818,
                "src": "795:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 816,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Questions",
            "nameLocation": "401:9:6",
            "nodeType": "StructDefinition",
            "scope": 1376,
            "src": "394:426:6",
            "visibility": "public"
          },
          {
            "canonicalName": "Polymarket.AmountAdded",
            "id": 825,
            "members": [
              {
                "constant": false,
                "id": 820,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "863:4:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "855:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "855:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 822,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "885:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "877:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "877:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 824,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "909:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 825,
                "src": "901:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 823,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "901:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AmountAdded",
            "nameLocation": "833:11:6",
            "nodeType": "StructDefinition",
            "scope": 1376,
            "src": "826:99:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "da6b4db8",
            "id": 829,
            "mutability": "mutable",
            "name": "winningAmount",
            "nameLocation": "966:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "931:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 828,
              "keyType": {
                "id": 826,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "931:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 827,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "950:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b78d6c1d",
            "id": 832,
            "mutability": "mutable",
            "name": "winningAddresses",
            "nameLocation": "1002:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "985:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 830,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 831,
              "nodeType": "ArrayTypeName",
              "src": "985:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 850,
            "name": "QuestionCreated",
            "nameLocation": "1031:15:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1064:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1056:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "question",
                  "nameLocation": "1083:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1076:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1109:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1101:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1101:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "createdBy",
                  "nameLocation": "1136:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1128:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creatorImageHash",
                  "nameLocation": "1162:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1155:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount",
                  "nameLocation": "1196:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1188:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalYesAmount",
                  "nameLocation": "1225:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1217:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalNoAmount",
                  "nameLocation": "1257:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 850,
                  "src": "1249:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:230:6"
            },
            "src": "1025:252:6"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "1497:847:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 864,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1515:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1515:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 866,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "1529:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1515:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1536:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "1507:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:44:6"
                },
                {
                  "assignments": [872],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1570:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "1562:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1562:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 875,
                  "initialValue": {
                    "expression": {
                      "id": 873,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "1582:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "1582:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:35:6"
                },
                {
                  "assignments": [878],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 878,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "1626:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 963,
                      "src": "1608:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 876,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "1608:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "1608:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 882,
                  "initialValue": {
                    "baseExpression": {
                      "id": 879,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "1637:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 881,
                    "indexExpression": {
                      "id": 880,
                      "name": "totalQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "1647:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1637:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1608:54:6"
                },
                {
                  "expression": {
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 883,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1673:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 787,
                      "src": "1673:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1687:16:6",
                      "subExpression": {
                        "id": 886,
                        "name": "totalQuestions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "1687:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1673:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 889,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:30:6"
                },
                {
                  "expression": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 890,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1713:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "question",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 789,
                      "src": "1713:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 893,
                      "name": "_question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "1733:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1713:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 895,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:29:6"
                },
                {
                  "expression": {
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 896,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1752:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 791,
                      "src": "1752:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 899,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "1773:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1752:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:30:6"
                },
                {
                  "expression": {
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 902,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1792:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "createdBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 795,
                      "src": "1792:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 905,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1813:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1813:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1792:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:31:6"
                },
                {
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 909,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1833:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 911,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creatorImageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 797,
                      "src": "1833:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 912,
                      "name": "_creatorImageHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "1861:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1833:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1833:45:6"
                },
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 915,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1888:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "1888:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1911:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1888:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:24:6"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 921,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1922:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalYesAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "1922:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1948:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1922:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1922:27:6"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 927,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1959:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalNoAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "1959:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1984:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1959:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:26:6"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 933,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "1995:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "1995:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 936,
                      "name": "_description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "2018:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1995:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:35:6"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 939,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "2040:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "resolverUrl",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 817,
                      "src": "2040:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 942,
                      "name": "_resolverUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "2063:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2040:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "2040:35:6"
                },
                {
                  "expression": {
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 945,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "2085:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 793,
                      "src": "2085:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 948,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "2109:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2085:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "2085:37:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "totalQuestions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "2167:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 953,
                        "name": "_question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "2195:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 954,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "2218:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 955,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2241:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2241:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 957,
                        "name": "_creatorImageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "2265:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2296:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 951,
                      "name": "QuestionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 850,
                      "src": "2138:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,string memory,uint256,address,string memory,uint256,uint256,uint256)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:199:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "2133:204:6"
                }
              ]
            },
            "functionSelector": "19a1cafe",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createQuestion",
            "nameLocation": "1292:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "_question",
                  "nameLocation": "1330:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1316:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "_creatorImageHash",
                  "nameLocation": "1363:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1349:31:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_description",
                  "nameLocation": "1404:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1390:26:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "_resolverUrl",
                  "nameLocation": "1440:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1426:26:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1426:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "1470:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1462:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:183:6"
            },
            "returnParameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:6"
            },
            "scope": 1376,
            "src": "1283:1061:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "2421:473:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 972,
                          "name": "_questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "2439:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2454:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2439:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175657374696f6e2049442063616e6e6f74206265206e756c6c",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2457:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        },
                        "value": "Question ID cannot be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2431:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2431:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:55:6"
                },
                {
                  "assignments": [980],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "2514:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "2496:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 978,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "2496:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "2496:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "baseExpression": {
                      "id": 981,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "2525:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 983,
                    "indexExpression": {
                      "id": 982,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "2535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2525:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2496:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 989,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2587:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2587:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2607:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2599:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2599:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2599:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 995,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "2614:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 986,
                            "name": "polyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "2563:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 985,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "2557:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2557:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "2557:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2557:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:64:6"
                },
                {
                  "assignments": [1000],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "amountAdded",
                      "nameLocation": "2650:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "2631:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      },
                      "typeName": {
                        "id": 999,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 998,
                          "name": "AmountAdded",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 825,
                          "src": "2631:11:6"
                        },
                        "referencedDeclaration": 825,
                        "src": "2631:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                          "typeString": "struct Polymarket.AmountAdded"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1008,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2689:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2689:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1004,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 968,
                        "src": "2713:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1005,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2733:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2733:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1001,
                      "name": "AmountAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "2664:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AmountAdded_$825_storage_ptr_$",
                        "typeString": "type(struct Polymarket.AmountAdded storage pointer)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2664:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                      "typeString": "struct Polymarket.AmountAdded memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2631:127:6"
                },
                {
                  "expression": {
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1009,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2769:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalYesAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 809,
                      "src": "2769:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1012,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "2796:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2769:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "2769:33:6"
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1015,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2812:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "2812:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1018,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 968,
                      "src": "2836:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2812:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1026,
                        "name": "amountAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "2875:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1021,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "2852:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "yesCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 801,
                        "src": "2852:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2852:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$_t_struct$_AmountAdded_$825_storage_$returns$__$bound_to$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Polymarket.AmountAdded storage ref[] storage pointer,struct Polymarket.AmountAdded storage ref)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:35:6"
                }
              ]
            },
            "functionSelector": "eb3f75e2",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addYesBet",
            "nameLocation": "2359:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "2377:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2369:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 968,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2398:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2390:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2368:37:6"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:0:6"
            },
            "scope": 1376,
            "src": "2350:544:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "2970:471:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1038,
                          "name": "_questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1032,
                          "src": "2988:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3003:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2988:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5175657374696f6e2049442063616e6e6f74206265206e756c6c",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3006:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        },
                        "value": "Question ID cannot be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_720093372377ee82d1b8d8ae36441bb07af8c1f7a4496ba21ad735967895d399",
                          "typeString": "literal_string \"Question ID cannot be null\""
                        }
                      ],
                      "id": 1037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "2980:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:55:6"
                },
                {
                  "assignments": [1046],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1046,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3063:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "3045:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1045,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1044,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3045:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3045:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1050,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1047,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3074:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1049,
                    "indexExpression": {
                      "id": 1048,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "3084:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3074:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3045:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1055,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3136:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3136:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1059,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3156:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Polymarket_$1376",
                              "typeString": "contract Polymarket"
                            }
                          ],
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3148:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1057,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3148:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3148:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1061,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "3163:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "polyToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "3112:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1051,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 545,
                          "src": "3106:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3106:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$545",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "3106:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:64:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "3106:64:6"
                },
                {
                  "assignments": [1066],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1066,
                      "mutability": "mutable",
                      "name": "amountAdded",
                      "nameLocation": "3199:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "3180:30:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      },
                      "typeName": {
                        "id": 1065,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1064,
                          "name": "AmountAdded",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 825,
                          "src": "3180:11:6"
                        },
                        "referencedDeclaration": 825,
                        "src": "3180:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                          "typeString": "struct Polymarket.AmountAdded"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1074,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3238:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3238:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1070,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "3262:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1071,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "3282:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3282:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1067,
                      "name": "AmountAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "3213:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AmountAdded_$825_storage_ptr_$",
                        "typeString": "type(struct Polymarket.AmountAdded storage pointer)"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:94:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                      "typeString": "struct Polymarket.AmountAdded memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3180:127:6"
                },
                {
                  "expression": {
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1075,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3318:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalNoAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 811,
                      "src": "3318:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1078,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "3344:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3318:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:32:6"
                },
                {
                  "expression": {
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1081,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3360:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 807,
                      "src": "3360:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1084,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1034,
                      "src": "3384:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3360:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1092,
                        "name": "amountAdded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "3422:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AmountAdded_$825_memory_ptr",
                          "typeString": "struct Polymarket.AmountAdded memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1087,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1046,
                          "src": "3400:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "noCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 805,
                        "src": "3400:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3400:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$_t_struct$_AmountAdded_$825_storage_$returns$__$bound_to$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Polymarket.AmountAdded storage ref[] storage pointer,struct Polymarket.AmountAdded storage ref)"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:34:6"
                }
              ]
            },
            "functionSelector": "bf01fe00",
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNoBet",
            "nameLocation": "2909:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "2926:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2918:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2947:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2939:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2917:37:6"
            },
            "returnParameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2970:0:6"
            },
            "scope": 1376,
            "src": "2900:541:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "3583:122:6",
              "statements": [
                {
                  "assignments": [1111],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1111,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3611:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1122,
                      "src": "3593:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1109,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3593:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3593:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1112,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3622:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1114,
                    "indexExpression": {
                      "id": 1113,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "3632:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3622:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3593:51:6"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1116,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "3662:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "yesCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 801,
                        "src": "3662:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 1118,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1111,
                          "src": "3681:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                            "typeString": "struct Polymarket.Questions storage pointer"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "noCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 805,
                        "src": "3681:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                        }
                      }
                    ],
                    "id": 1120,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3661:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_$_t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_$",
                      "typeString": "tuple(struct Polymarket.AmountAdded storage ref[] storage ref,struct Polymarket.AmountAdded storage ref[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 1108,
                  "id": 1121,
                  "nodeType": "Return",
                  "src": "3654:44:6"
                }
              ]
            },
            "functionSelector": "14dd5762",
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGraphData",
            "nameLocation": "3456:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "3477:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3469:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3468:21:6"
            },
            "returnParameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3535:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1101,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1100,
                        "name": "AmountAdded",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 825,
                        "src": "3535:11:6"
                      },
                      "referencedDeclaration": 825,
                      "src": "3535:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      }
                    },
                    "id": 1102,
                    "nodeType": "ArrayTypeName",
                    "src": "3535:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3557:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Polymarket.AmountAdded[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1105,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1104,
                        "name": "AmountAdded",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 825,
                        "src": "3557:11:6"
                      },
                      "referencedDeclaration": 825,
                      "src": "3557:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage_ptr",
                        "typeString": "struct Polymarket.AmountAdded"
                      }
                    },
                    "id": 1106,
                    "nodeType": "ArrayTypeName",
                    "src": "3557:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage_ptr",
                      "typeString": "struct Polymarket.AmountAdded[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3534:44:6"
            },
            "scope": 1376,
            "src": "3447:258:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "3819:1659:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1131,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3837:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3837:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1133,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "3851:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3837:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a6564",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        },
                        "value": "Unauthorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
                          "typeString": "literal_string \"Unauthorized\""
                        }
                      ],
                      "id": 1130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "3829:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3829:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:44:6"
                },
                {
                  "assignments": [1140],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1140,
                      "mutability": "mutable",
                      "name": "question",
                      "nameLocation": "3902:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "3884:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                        "typeString": "struct Polymarket.Questions"
                      },
                      "typeName": {
                        "id": 1139,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1138,
                          "name": "Questions",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 818,
                          "src": "3884:9:6"
                        },
                        "referencedDeclaration": 818,
                        "src": "3884:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1141,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "3913:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Questions_$818_storage_$",
                        "typeString": "mapping(uint256 => struct Polymarket.Questions storage ref)"
                      }
                    },
                    "id": 1143,
                    "indexExpression": {
                      "id": 1142,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "3923:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3913:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Questions_$818_storage",
                      "typeString": "struct Polymarket.Questions storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3884:51:6"
                },
                {
                  "condition": {
                    "id": 1145,
                    "name": "eventOutcome",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1127,
                    "src": "3949:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "4703:729:6",
                    "statements": [
                      {
                        "body": {
                          "id": 1297,
                          "nodeType": "Block",
                          "src": "4771:332:6",
                          "statements": [
                            {
                              "assignments": [1256],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1256,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "4797:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1297,
                                  "src": "4789:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1255,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4789:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1269,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1257,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4807:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1258,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "totalYesAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 809,
                                        "src": "4807:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1259,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4853:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1260,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "noCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 805,
                                            "src": "4853:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1262,
                                          "indexExpression": {
                                            "id": 1261,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1244,
                                            "src": "4870:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4853:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1263,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4853:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4807:72:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1265,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4806:74:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1266,
                                    "name": "question",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1140,
                                    "src": "4883:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                      "typeString": "struct Polymarket.Questions storage pointer"
                                    }
                                  },
                                  "id": 1267,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalNoAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 811,
                                  "src": "4883:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4806:99:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4789:116:6"
                            },
                            {
                              "expression": {
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1270,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4923:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1276,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1271,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4937:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1272,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "noCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 805,
                                        "src": "4937:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1274,
                                      "indexExpression": {
                                        "id": 1273,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "4954:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4937:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1275,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4937:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4923:39:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1277,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1256,
                                        "src": "4967:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1278,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4996:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1279,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "noCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 805,
                                            "src": "4996:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1281,
                                          "indexExpression": {
                                            "id": 1280,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1244,
                                            "src": "5013:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4996:19:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1282,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4996:26:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4967:55:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1284,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4966:57:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4923:100:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1286,
                              "nodeType": "ExpressionStatement",
                              "src": "4923:100:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1290,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "5063:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1291,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "noCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 805,
                                        "src": "5063:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1293,
                                      "indexExpression": {
                                        "id": 1292,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1244,
                                        "src": "5080:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5063:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1294,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "5063:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1287,
                                    "name": "winningAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "5041:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1289,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "5041:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5041:47:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1296,
                              "nodeType": "ExpressionStatement",
                              "src": "5041:47:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1247,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "4737:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1248,
                                "name": "question",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "4741:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                  "typeString": "struct Polymarket.Questions storage pointer"
                                }
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "noCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 805,
                              "src": "4741:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4741:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4737:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1298,
                        "initializationExpression": {
                          "assignments": [1244],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1244,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4730:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1298,
                              "src": "4722:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1243,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4722:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1246,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4734:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4722:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4766:3:6",
                            "subExpression": {
                              "id": 1252,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1244,
                              "src": "4766:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1254,
                          "nodeType": "ExpressionStatement",
                          "src": "4766:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "4717:386:6"
                      },
                      {
                        "body": {
                          "id": 1334,
                          "nodeType": "Block",
                          "src": "5171:214:6",
                          "statements": [
                            {
                              "assignments": [1311],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1311,
                                  "mutability": "mutable",
                                  "name": "_address",
                                  "nameLocation": "5205:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1334,
                                  "src": "5189:24:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1310,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5189:15:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1318,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1314,
                                      "name": "winningAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 832,
                                      "src": "5224:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1316,
                                    "indexExpression": {
                                      "id": 1315,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1300,
                                      "src": "5241:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5224:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1313,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5216:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1312,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5216:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5216:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5189:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1323,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1311,
                                    "src": "5288:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1324,
                                      "name": "winningAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "5298:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1326,
                                    "indexExpression": {
                                      "id": 1325,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1311,
                                      "src": "5312:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5298:23:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1320,
                                        "name": "polyToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 762,
                                        "src": "5268:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1319,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 545,
                                      "src": "5262:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5262:16:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$545",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 119,
                                  "src": "5262:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5262:60:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1328,
                              "nodeType": "ExpressionStatement",
                              "src": "5262:60:6"
                            },
                            {
                              "expression": {
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "5340:30:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1329,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "5347:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1331,
                                  "indexExpression": {
                                    "id": 1330,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1311,
                                    "src": "5361:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5347:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1333,
                              "nodeType": "ExpressionStatement",
                              "src": "5340:30:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1303,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "5137:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1304,
                              "name": "winningAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "5141:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5141:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5137:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1335,
                        "initializationExpression": {
                          "assignments": [1300],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1300,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5130:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1335,
                              "src": "5122:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1299,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5122:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1302,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5134:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5122:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5166:3:6",
                            "subExpression": {
                              "id": 1307,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "5166:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1309,
                          "nodeType": "ExpressionStatement",
                          "src": "5166:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "5117:268:6"
                      },
                      {
                        "expression": {
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5398:23:6",
                          "subExpression": {
                            "id": 1336,
                            "name": "winningAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "5405:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "5398:23:6"
                      }
                    ]
                  },
                  "id": 1340,
                  "nodeType": "IfStatement",
                  "src": "3945:1487:6",
                  "trueBody": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "3963:734:6",
                    "statements": [
                      {
                        "body": {
                          "id": 1200,
                          "nodeType": "Block",
                          "src": "4032:336:6",
                          "statements": [
                            {
                              "assignments": [1159],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1159,
                                  "mutability": "mutable",
                                  "name": "amount",
                                  "nameLocation": "4058:6:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1200,
                                  "src": "4050:14:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1158,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4050:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1172,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1167,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1160,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4068:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1161,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "totalNoAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 811,
                                        "src": "4068:22:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1162,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4113:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1163,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "yesCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 801,
                                            "src": "4113:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1165,
                                          "indexExpression": {
                                            "id": 1164,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1147,
                                            "src": "4131:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4113:20:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1166,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4113:27:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4068:72:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1168,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4067:74:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1169,
                                    "name": "question",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1140,
                                    "src": "4144:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                      "typeString": "struct Polymarket.Questions storage pointer"
                                    }
                                  },
                                  "id": 1170,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalYesAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 809,
                                  "src": "4144:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4067:100:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4050:117:6"
                            },
                            {
                              "expression": {
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1173,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4185:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1179,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1174,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4199:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1175,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "yesCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 801,
                                        "src": "4199:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1177,
                                      "indexExpression": {
                                        "id": 1176,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1147,
                                        "src": "4217:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4199:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1178,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4199:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4185:40:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1180,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1159,
                                        "src": "4230:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 1181,
                                              "name": "question",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1140,
                                              "src": "4259:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                                "typeString": "struct Polymarket.Questions storage pointer"
                                              }
                                            },
                                            "id": 1182,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "yesCount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 801,
                                            "src": "4259:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                              "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1184,
                                          "indexExpression": {
                                            "id": 1183,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1147,
                                            "src": "4277:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4259:20:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                            "typeString": "struct Polymarket.AmountAdded storage ref"
                                          }
                                        },
                                        "id": 1185,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 822,
                                        "src": "4259:27:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4230:56:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1187,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4229:58:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4185:102:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1189,
                              "nodeType": "ExpressionStatement",
                              "src": "4185:102:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1193,
                                          "name": "question",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "4327:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                            "typeString": "struct Polymarket.Questions storage pointer"
                                          }
                                        },
                                        "id": 1194,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "yesCount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 801,
                                        "src": "4327:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                          "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1196,
                                      "indexExpression": {
                                        "id": 1195,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1147,
                                        "src": "4345:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4327:20:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AmountAdded_$825_storage",
                                        "typeString": "struct Polymarket.AmountAdded storage ref"
                                      }
                                    },
                                    "id": 1197,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 820,
                                    "src": "4327:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1190,
                                    "name": "winningAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 832,
                                    "src": "4305:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4305:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4305:48:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1199,
                              "nodeType": "ExpressionStatement",
                              "src": "4305:48:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1150,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "3997:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1151,
                                "name": "question",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1140,
                                "src": "4001:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                                  "typeString": "struct Polymarket.Questions storage pointer"
                                }
                              },
                              "id": 1152,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "yesCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 801,
                              "src": "4001:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AmountAdded_$825_storage_$dyn_storage",
                                "typeString": "struct Polymarket.AmountAdded storage ref[] storage ref"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4001:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3997:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1201,
                        "initializationExpression": {
                          "assignments": [1147],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1147,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3990:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1201,
                              "src": "3982:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1146,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3982:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1149,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3994:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3982:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4027:3:6",
                            "subExpression": {
                              "id": 1155,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "4027:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1157,
                          "nodeType": "ExpressionStatement",
                          "src": "4027:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "3977:391:6"
                      },
                      {
                        "body": {
                          "id": 1237,
                          "nodeType": "Block",
                          "src": "4436:214:6",
                          "statements": [
                            {
                              "assignments": [1214],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1214,
                                  "mutability": "mutable",
                                  "name": "_address",
                                  "nameLocation": "4470:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1237,
                                  "src": "4454:24:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1213,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4454:15:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1221,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1217,
                                      "name": "winningAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 832,
                                      "src": "4489:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 1219,
                                    "indexExpression": {
                                      "id": 1218,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "4506:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4489:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4481:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1215,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4481:8:6",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4481:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4454:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1226,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1214,
                                    "src": "4553:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1227,
                                      "name": "winningAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "4563:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1229,
                                    "indexExpression": {
                                      "id": 1228,
                                      "name": "_address",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1214,
                                      "src": "4577:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4563:23:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1223,
                                        "name": "polyToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 762,
                                        "src": "4533:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1222,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 545,
                                      "src": "4527:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$545_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4527:16:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$545",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 119,
                                  "src": "4527:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4527:60:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "4527:60:6"
                            },
                            {
                              "expression": {
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "4605:30:6",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1232,
                                    "name": "winningAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "4612:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1234,
                                  "indexExpression": {
                                    "id": 1233,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1214,
                                    "src": "4626:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4612:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1236,
                              "nodeType": "ExpressionStatement",
                              "src": "4605:30:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1206,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "4402:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1207,
                              "name": "winningAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "4406:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4406:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4402:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1238,
                        "initializationExpression": {
                          "assignments": [1203],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1203,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4395:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1238,
                              "src": "4387:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1202,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4387:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1205,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4399:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4387:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4431:3:6",
                            "subExpression": {
                              "id": 1210,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "4431:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1212,
                          "nodeType": "ExpressionStatement",
                          "src": "4431:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "4382:268:6"
                      },
                      {
                        "expression": {
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4663:23:6",
                          "subExpression": {
                            "id": 1239,
                            "name": "winningAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "4670:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1241,
                        "nodeType": "ExpressionStatement",
                        "src": "4663:23:6"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1341,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1140,
                        "src": "5441:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Questions_$818_storage_ptr",
                          "typeString": "struct Polymarket.Questions storage pointer"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "eventCompleted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "5441:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5467:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5441:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:30:6"
                }
              ]
            },
            "functionSelector": "724ba40b",
            "id": 1348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeWinningAmount",
            "nameLocation": "3720:23:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nameLocation": "3752:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "3744:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "eventOutcome",
                  "nameLocation": "3770:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "3765:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3765:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:40:6"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3819:0:6"
            },
            "scope": 1376,
            "src": "3711:1767:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "5530:80:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1353,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5544:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5544:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1355,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "5558:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5544:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5598:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 1352,
                    "id": 1360,
                    "nodeType": "Return",
                    "src": "5591:12:6"
                  },
                  "id": 1361,
                  "nodeType": "IfStatement",
                  "src": "5540:63:6",
                  "trueBody": {
                    "expression": {
                      "hexValue": "74727565",
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5572:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "functionReturnParameters": 1352,
                    "id": 1358,
                    "nodeType": "Return",
                    "src": "5565:11:6"
                  }
                }
              ]
            },
            "functionSelector": "b6db75a0",
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAdmin",
            "nameLocation": "5493:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5500:2:6"
            },
            "returnParameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "5524:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5523:6:6"
            },
            "scope": 1376,
            "src": "5484:126:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "5664:45:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1370,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5689:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Polymarket_$1376",
                            "typeString": "contract Polymarket"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Polymarket_$1376",
                            "typeString": "contract Polymarket"
                          }
                        ],
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5681:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5681:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5681:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5681:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1367,
                  "id": 1373,
                  "nodeType": "Return",
                  "src": "5674:28:6"
                }
              ]
            },
            "functionSelector": "25caa262",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBal",
            "nameLocation": "5625:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5631:2:6"
            },
            "returnParameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "5655:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5654:9:6"
            },
            "scope": 1376,
            "src": "5616:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1377,
        "src": "113:5598:6",
        "usedErrors": []
      }
    ],
    "src": "32:5738:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFdDDb733F08A7D9542fC5549eD6d51Aa408916cC",
      "transactionHash": "0xb9d9ae673457e5021f258f6dc7600e0b4d961ecb106dc427ce928217d0dd168f"
    },
    "80001": {
      "events": {
        "0xd8960286cb5486e9a27d200d805d06e2eeda2fe2bd67967e36b466ecd440ac99": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "question",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "creatorImageHash",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalYesAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "totalNoAmount",
              "type": "uint256"
            }
          ],
          "name": "QuestionCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7693d5Aa88004f6c5c2e16D7b13Db04aFaae797b",
      "transactionHash": "0xf5bd88b67942e84f10d5f3fea9112ad6e8ed1a7784a914ca3ffa7f24cc3e5771"
    },
    "1636245820993": {
      "events": {},
      "links": {},
      "address": "0xEe9E2F4d85601507fac2aBb636bd55a187DD450e",
      "transactionHash": "0x87ed0afecaf3a9ef8fc450350d5c31e27706971c6339b5a4c74306300ac98ceb"
    },
    "1636265105330": {
      "events": {},
      "links": {},
      "address": "0x73532602C3f51A44C09a37dAEa21B79DdbE213BB",
      "transactionHash": "0xdeb4629f7dd745de0e81c94e68f6aa88e77e0607a4de3fdaac3b1a3083f4b211"
    },
    "1636431174100": {
      "events": {},
      "links": {},
      "address": "0xC48589a207F72c29C87f586967f0c375cAE22E94",
      "transactionHash": "0xa6dd291f5614eaf01efdaa00a9068a5e863ab3a030bef861fb4725dde5a9f0df"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-17T16:48:24.368Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
